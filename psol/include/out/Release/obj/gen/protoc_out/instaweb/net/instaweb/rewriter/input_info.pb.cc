// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/input_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/instaweb/rewriter/input_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

namespace {

const ::google::protobuf::Descriptor* InputInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InputInfo_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() {
  protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/instaweb/rewriter/input_info.proto");
  GOOGLE_CHECK(file != NULL);
  InputInfo_descriptor_ = file->message_type(0);
  static const int InputInfo_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, last_modified_time_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, expiration_time_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, date_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, input_content_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, disable_further_processing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, url_),
  };
  InputInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InputInfo_descriptor_,
      InputInfo::default_instance_,
      InputInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(InputInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputInfo, _internal_metadata_),
      -1);
  InputInfo_Type_descriptor_ = InputInfo_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InputInfo_descriptor_, &InputInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() {
  delete InputInfo::default_instance_;
  delete InputInfo_reflection_;
}

void protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&net/instaweb/rewriter/input_info.proto"
    "\022\014net_instaweb\"\247\002\n\tInputInfo\022\r\n\005index\030\001 "
    "\001(\005\022*\n\004type\030\002 \002(\0162\034.net_instaweb.InputIn"
    "fo.Type\022\035\n\025last_modified_time_ms\030\003 \001(\003\022\032"
    "\n\022expiration_time_ms\030\004 \001(\003\022\020\n\010filename\030\005"
    " \001(\t\022\017\n\007date_ms\030\006 \001(\003\022\032\n\022input_content_h"
    "ash\030\007 \001(\t\022\"\n\032disable_further_processing\030"
    "\010 \001(\010\022\013\n\003url\030\t \001(\t\"4\n\004Type\022\n\n\006CACHED\020\001\022\016"
    "\n\nFILE_BASED\020\002\022\020\n\014ALWAYS_VALID\020\003", 352);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/instaweb/rewriter/input_info.proto", &protobuf_RegisterTypes);
  InputInfo::default_instance_ = new InputInfo();
  InputInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2finstaweb_2frewriter_2finput_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2finstaweb_2frewriter_2finput_5finfo_2eproto {
  StaticDescriptorInitializer_net_2finstaweb_2frewriter_2finput_5finfo_2eproto() {
    protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto();
  }
} static_descriptor_initializer_net_2finstaweb_2frewriter_2finput_5finfo_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* InputInfo_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInfo_Type_descriptor_;
}
bool InputInfo_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InputInfo_Type InputInfo::CACHED;
const InputInfo_Type InputInfo::FILE_BASED;
const InputInfo_Type InputInfo::ALWAYS_VALID;
const InputInfo_Type InputInfo::Type_MIN;
const InputInfo_Type InputInfo::Type_MAX;
const int InputInfo::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputInfo::kIndexFieldNumber;
const int InputInfo::kTypeFieldNumber;
const int InputInfo::kLastModifiedTimeMsFieldNumber;
const int InputInfo::kExpirationTimeMsFieldNumber;
const int InputInfo::kFilenameFieldNumber;
const int InputInfo::kDateMsFieldNumber;
const int InputInfo::kInputContentHashFieldNumber;
const int InputInfo::kDisableFurtherProcessingFieldNumber;
const int InputInfo::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputInfo::InputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.InputInfo)
}

void InputInfo::InitAsDefaultInstance() {
}

InputInfo::InputInfo(const InputInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.InputInfo)
}

void InputInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_ = 0;
  type_ = 1;
  last_modified_time_ms_ = GOOGLE_LONGLONG(0);
  expiration_time_ms_ = GOOGLE_LONGLONG(0);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_ms_ = GOOGLE_LONGLONG(0);
  input_content_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disable_further_processing_ = false;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputInfo::~InputInfo() {
  // @@protoc_insertion_point(destructor:net_instaweb.InputInfo)
  SharedDtor();
}

void InputInfo::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_content_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputInfo_descriptor_;
}

const InputInfo& InputInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto();
  return *default_instance_;
}

InputInfo* InputInfo::default_instance_ = NULL;

InputInfo* InputInfo::New(::google::protobuf::Arena* arena) const {
  InputInfo* n = new InputInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.InputInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InputInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InputInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(last_modified_time_ms_, expiration_time_ms_);
    index_ = 0;
    type_ = 1;
    if (has_filename()) {
      filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    date_ms_ = GOOGLE_LONGLONG(0);
    if (has_input_content_hash()) {
      input_content_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    disable_further_processing_ = false;
  }
  if (has_url()) {
    url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.InputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required .net_instaweb.InputInfo.Type type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::net_instaweb::InputInfo_Type_IsValid(value)) {
            set_type(static_cast< ::net_instaweb::InputInfo_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_last_modified_time_ms;
        break;
      }

      // optional int64 last_modified_time_ms = 3;
      case 3: {
        if (tag == 24) {
         parse_last_modified_time_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_modified_time_ms_)));
          set_has_last_modified_time_ms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_expiration_time_ms;
        break;
      }

      // optional int64 expiration_time_ms = 4;
      case 4: {
        if (tag == 32) {
         parse_expiration_time_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_time_ms_)));
          set_has_expiration_time_ms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_filename;
        break;
      }

      // optional string filename = 5;
      case 5: {
        if (tag == 42) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.InputInfo.filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_date_ms;
        break;
      }

      // optional int64 date_ms = 6;
      case 6: {
        if (tag == 48) {
         parse_date_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_ms_)));
          set_has_date_ms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_input_content_hash;
        break;
      }

      // optional string input_content_hash = 7;
      case 7: {
        if (tag == 58) {
         parse_input_content_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_content_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_content_hash().data(), this->input_content_hash().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.InputInfo.input_content_hash");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_disable_further_processing;
        break;
      }

      // optional bool disable_further_processing = 8;
      case 8: {
        if (tag == 64) {
         parse_disable_further_processing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_further_processing_)));
          set_has_disable_further_processing();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_url;
        break;
      }

      // optional string url = 9;
      case 9: {
        if (tag == 74) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.InputInfo.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.InputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.InputInfo)
  return false;
#undef DO_
}

void InputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.InputInfo)
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // required .net_instaweb.InputInfo.Type type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional int64 last_modified_time_ms = 3;
  if (has_last_modified_time_ms()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->last_modified_time_ms(), output);
  }

  // optional int64 expiration_time_ms = 4;
  if (has_expiration_time_ms()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->expiration_time_ms(), output);
  }

  // optional string filename = 5;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filename(), output);
  }

  // optional int64 date_ms = 6;
  if (has_date_ms()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->date_ms(), output);
  }

  // optional string input_content_hash = 7;
  if (has_input_content_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_content_hash().data(), this->input_content_hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.input_content_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->input_content_hash(), output);
  }

  // optional bool disable_further_processing = 8;
  if (has_disable_further_processing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->disable_further_processing(), output);
  }

  // optional string url = 9;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.InputInfo)
}

::google::protobuf::uint8* InputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.InputInfo)
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // required .net_instaweb.InputInfo.Type type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional int64 last_modified_time_ms = 3;
  if (has_last_modified_time_ms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->last_modified_time_ms(), target);
  }

  // optional int64 expiration_time_ms = 4;
  if (has_expiration_time_ms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->expiration_time_ms(), target);
  }

  // optional string filename = 5;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filename(), target);
  }

  // optional int64 date_ms = 6;
  if (has_date_ms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->date_ms(), target);
  }

  // optional string input_content_hash = 7;
  if (has_input_content_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_content_hash().data(), this->input_content_hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.input_content_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->input_content_hash(), target);
  }

  // optional bool disable_further_processing = 8;
  if (has_disable_further_processing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->disable_further_processing(), target);
  }

  // optional string url = 9;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.InputInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.InputInfo)
  return target;
}

int InputInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.InputInfo)
  int total_size = 0;

  // required .net_instaweb.InputInfo.Type type = 2;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[0 / 32] & 253u) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int64 last_modified_time_ms = 3;
    if (has_last_modified_time_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_modified_time_ms());
    }

    // optional int64 expiration_time_ms = 4;
    if (has_expiration_time_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration_time_ms());
    }

    // optional string filename = 5;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional int64 date_ms = 6;
    if (has_date_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->date_ms());
    }

    // optional string input_content_hash = 7;
    if (has_input_content_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->input_content_hash());
    }

    // optional bool disable_further_processing = 8;
    if (has_disable_further_processing()) {
      total_size += 1 + 1;
    }

  }
  // optional string url = 9;
  if (has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.InputInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InputInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.InputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.InputInfo)
    MergeFrom(*source);
  }
}

void InputInfo::MergeFrom(const InputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.InputInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_last_modified_time_ms()) {
      set_last_modified_time_ms(from.last_modified_time_ms());
    }
    if (from.has_expiration_time_ms()) {
      set_expiration_time_ms(from.expiration_time_ms());
    }
    if (from.has_filename()) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (from.has_date_ms()) {
      set_date_ms(from.date_ms());
    }
    if (from.has_input_content_hash()) {
      set_has_input_content_hash();
      input_content_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_content_hash_);
    }
    if (from.has_disable_further_processing()) {
      set_disable_further_processing(from.disable_further_processing());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputInfo::CopyFrom(const InputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void InputInfo::Swap(InputInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputInfo::InternalSwap(InputInfo* other) {
  std::swap(index_, other->index_);
  std::swap(type_, other->type_);
  std::swap(last_modified_time_ms_, other->last_modified_time_ms_);
  std::swap(expiration_time_ms_, other->expiration_time_ms_);
  filename_.Swap(&other->filename_);
  std::swap(date_ms_, other->date_ms_);
  input_content_hash_.Swap(&other->input_content_hash_);
  std::swap(disable_further_processing_, other->disable_further_processing_);
  url_.Swap(&other->url_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputInfo_descriptor_;
  metadata.reflection = InputInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InputInfo

// optional int32 index = 1;
bool InputInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InputInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void InputInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void InputInfo::clear_index() {
  index_ = 0;
  clear_has_index();
}
 ::google::protobuf::int32 InputInfo::index() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.index)
  return index_;
}
 void InputInfo::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.index)
}

// required .net_instaweb.InputInfo.Type type = 2;
bool InputInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InputInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void InputInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void InputInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::net_instaweb::InputInfo_Type InputInfo::type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.type)
  return static_cast< ::net_instaweb::InputInfo_Type >(type_);
}
 void InputInfo::set_type(::net_instaweb::InputInfo_Type value) {
  assert(::net_instaweb::InputInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.type)
}

// optional int64 last_modified_time_ms = 3;
bool InputInfo::has_last_modified_time_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InputInfo::set_has_last_modified_time_ms() {
  _has_bits_[0] |= 0x00000004u;
}
void InputInfo::clear_has_last_modified_time_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
void InputInfo::clear_last_modified_time_ms() {
  last_modified_time_ms_ = GOOGLE_LONGLONG(0);
  clear_has_last_modified_time_ms();
}
 ::google::protobuf::int64 InputInfo::last_modified_time_ms() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.last_modified_time_ms)
  return last_modified_time_ms_;
}
 void InputInfo::set_last_modified_time_ms(::google::protobuf::int64 value) {
  set_has_last_modified_time_ms();
  last_modified_time_ms_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.last_modified_time_ms)
}

// optional int64 expiration_time_ms = 4;
bool InputInfo::has_expiration_time_ms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InputInfo::set_has_expiration_time_ms() {
  _has_bits_[0] |= 0x00000008u;
}
void InputInfo::clear_has_expiration_time_ms() {
  _has_bits_[0] &= ~0x00000008u;
}
void InputInfo::clear_expiration_time_ms() {
  expiration_time_ms_ = GOOGLE_LONGLONG(0);
  clear_has_expiration_time_ms();
}
 ::google::protobuf::int64 InputInfo::expiration_time_ms() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.expiration_time_ms)
  return expiration_time_ms_;
}
 void InputInfo::set_expiration_time_ms(::google::protobuf::int64 value) {
  set_has_expiration_time_ms();
  expiration_time_ms_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.expiration_time_ms)
}

// optional string filename = 5;
bool InputInfo::has_filename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InputInfo::set_has_filename() {
  _has_bits_[0] |= 0x00000010u;
}
void InputInfo::clear_has_filename() {
  _has_bits_[0] &= ~0x00000010u;
}
void InputInfo::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
 const ::std::string& InputInfo::filename() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.filename)
}
 void InputInfo::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.InputInfo.filename)
}
 void InputInfo::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.InputInfo.filename)
}
 ::std::string* InputInfo::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:net_instaweb.InputInfo.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInfo::release_filename() {
  // @@protoc_insertion_point(field_release:net_instaweb.InputInfo.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.InputInfo.filename)
}

// optional int64 date_ms = 6;
bool InputInfo::has_date_ms() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void InputInfo::set_has_date_ms() {
  _has_bits_[0] |= 0x00000020u;
}
void InputInfo::clear_has_date_ms() {
  _has_bits_[0] &= ~0x00000020u;
}
void InputInfo::clear_date_ms() {
  date_ms_ = GOOGLE_LONGLONG(0);
  clear_has_date_ms();
}
 ::google::protobuf::int64 InputInfo::date_ms() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.date_ms)
  return date_ms_;
}
 void InputInfo::set_date_ms(::google::protobuf::int64 value) {
  set_has_date_ms();
  date_ms_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.date_ms)
}

// optional string input_content_hash = 7;
bool InputInfo::has_input_content_hash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void InputInfo::set_has_input_content_hash() {
  _has_bits_[0] |= 0x00000040u;
}
void InputInfo::clear_has_input_content_hash() {
  _has_bits_[0] &= ~0x00000040u;
}
void InputInfo::clear_input_content_hash() {
  input_content_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_content_hash();
}
 const ::std::string& InputInfo::input_content_hash() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.input_content_hash)
  return input_content_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_input_content_hash(const ::std::string& value) {
  set_has_input_content_hash();
  input_content_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.input_content_hash)
}
 void InputInfo::set_input_content_hash(const char* value) {
  set_has_input_content_hash();
  input_content_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.InputInfo.input_content_hash)
}
 void InputInfo::set_input_content_hash(const char* value, size_t size) {
  set_has_input_content_hash();
  input_content_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.InputInfo.input_content_hash)
}
 ::std::string* InputInfo::mutable_input_content_hash() {
  set_has_input_content_hash();
  // @@protoc_insertion_point(field_mutable:net_instaweb.InputInfo.input_content_hash)
  return input_content_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInfo::release_input_content_hash() {
  // @@protoc_insertion_point(field_release:net_instaweb.InputInfo.input_content_hash)
  clear_has_input_content_hash();
  return input_content_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_allocated_input_content_hash(::std::string* input_content_hash) {
  if (input_content_hash != NULL) {
    set_has_input_content_hash();
  } else {
    clear_has_input_content_hash();
  }
  input_content_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_content_hash);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.InputInfo.input_content_hash)
}

// optional bool disable_further_processing = 8;
bool InputInfo::has_disable_further_processing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void InputInfo::set_has_disable_further_processing() {
  _has_bits_[0] |= 0x00000080u;
}
void InputInfo::clear_has_disable_further_processing() {
  _has_bits_[0] &= ~0x00000080u;
}
void InputInfo::clear_disable_further_processing() {
  disable_further_processing_ = false;
  clear_has_disable_further_processing();
}
 bool InputInfo::disable_further_processing() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.disable_further_processing)
  return disable_further_processing_;
}
 void InputInfo::set_disable_further_processing(bool value) {
  set_has_disable_further_processing();
  disable_further_processing_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.disable_further_processing)
}

// optional string url = 9;
bool InputInfo::has_url() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void InputInfo::set_has_url() {
  _has_bits_[0] |= 0x00000100u;
}
void InputInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000100u;
}
void InputInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
 const ::std::string& InputInfo::url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.InputInfo.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.InputInfo.url)
}
 void InputInfo::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.InputInfo.url)
}
 void InputInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.InputInfo.url)
}
 ::std::string* InputInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:net_instaweb.InputInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InputInfo::release_url() {
  // @@protoc_insertion_point(field_release:net_instaweb.InputInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InputInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.InputInfo.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
