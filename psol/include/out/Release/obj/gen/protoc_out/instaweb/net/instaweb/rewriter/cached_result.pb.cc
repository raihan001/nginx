// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/cached_result.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/instaweb/rewriter/cached_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

namespace {

const ::google::protobuf::Descriptor* ImageDim_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImageDim_reflection_ = NULL;
const ::google::protobuf::Descriptor* AssociatedImageInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssociatedImageInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CachedResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CachedResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* OutputPartitions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OutputPartitions_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResourceContext_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResourceContext_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ResourceContext_LibWebpLevel_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() {
  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/instaweb/rewriter/cached_result.proto");
  GOOGLE_CHECK(file != NULL);
  ImageDim_descriptor_ = file->message_type(0);
  static const int ImageDim_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDim, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDim, height_),
  };
  ImageDim_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImageDim_descriptor_,
      ImageDim::default_instance_,
      ImageDim_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDim, _has_bits_[0]),
      -1,
      -1,
      sizeof(ImageDim),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDim, _internal_metadata_),
      -1);
  AssociatedImageInfo_descriptor_ = file->message_type(1);
  static const int AssociatedImageInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociatedImageInfo, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociatedImageInfo, dimensions_),
  };
  AssociatedImageInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AssociatedImageInfo_descriptor_,
      AssociatedImageInfo::default_instance_,
      AssociatedImageInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociatedImageInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(AssociatedImageInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssociatedImageInfo, _internal_metadata_),
      -1);
  CachedResult_descriptor_ = file->message_type(2);
  static const int CachedResult_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, optimizable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, frozen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, extension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, image_file_dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, inlined_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, spriter_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, inlined_image_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, low_resolution_inlined_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, low_resolution_inlined_image_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, url_relocatable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, canonicalize_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, debug_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, associated_image_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, is_inline_output_resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, optimized_image_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, collected_dependency_),
  };
  CachedResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CachedResult_descriptor_,
      CachedResult::default_instance_,
      CachedResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, _has_bits_[0]),
      -1,
      -1,
      sizeof(CachedResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CachedResult, _internal_metadata_),
      -1);
  OutputPartitions_descriptor_ = file->message_type(3);
  static const int OutputPartitions_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputPartitions, partition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputPartitions, other_dependency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputPartitions, debug_message_),
  };
  OutputPartitions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OutputPartitions_descriptor_,
      OutputPartitions::default_instance_,
      OutputPartitions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputPartitions, _has_bits_[0]),
      -1,
      -1,
      sizeof(OutputPartitions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OutputPartitions, _internal_metadata_),
      -1);
  ResourceContext_descriptor_ = file->message_type(4);
  static const int ResourceContext_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, desired_image_dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, inline_images_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, mobile_user_agent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, libwebp_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, may_use_small_screen_quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, may_use_save_data_quality_),
  };
  ResourceContext_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResourceContext_descriptor_,
      ResourceContext::default_instance_,
      ResourceContext_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResourceContext),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResourceContext, _internal_metadata_),
      -1);
  ResourceContext_LibWebpLevel_descriptor_ = ResourceContext_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImageDim_descriptor_, &ImageDim::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AssociatedImageInfo_descriptor_, &AssociatedImageInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CachedResult_descriptor_, &CachedResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OutputPartitions_descriptor_, &OutputPartitions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResourceContext_descriptor_, &ResourceContext::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() {
  delete ImageDim::default_instance_;
  delete ImageDim_reflection_;
  delete AssociatedImageInfo::default_instance_;
  delete AssociatedImageInfo_reflection_;
  delete CachedResult::default_instance_;
  delete CachedResult_reflection_;
  delete OutputPartitions::default_instance_;
  delete OutputPartitions_reflection_;
  delete ResourceContext::default_instance_;
  delete ResourceContext_reflection_;
}

void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::net_instaweb::spriter::protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  ::net_instaweb::protobuf_AddDesc_net_2finstaweb_2frewriter_2fdependencies_2eproto();
  ::net_instaweb::protobuf_AddDesc_net_2finstaweb_2frewriter_2finput_5finfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)net/instaweb/rewriter/cached_result.pr"
    "oto\022\014net_instaweb\032/net/instaweb/spriter/"
    "public/image_spriter.proto\032(net/instaweb"
    "/rewriter/dependencies.proto\032&net/instaw"
    "eb/rewriter/input_info.proto\"1\n\010ImageDim"
    "\022\021\n\005width\030\001 \001(\005:\002-1\022\022\n\006height\030\002 \001(\005:\002-1\""
    "N\n\023AssociatedImageInfo\022\013\n\003url\030\001 \001(\t\022*\n\nd"
    "imensions\030\002 \001(\0132\026.net_instaweb.ImageDim\""
    "\236\005\n\014CachedResult\022\031\n\013optimizable\030\001 \001(\010:\004t"
    "rue\022\013\n\003url\030\002 \001(\t\022\016\n\006frozen\030\005 \001(\010\022\014\n\004hash"
    "\030\006 \001(\t\022\021\n\textension\030\007 \001(\t\022/\n\017image_file_"
    "dims\030\013 \001(\0132\026.net_instaweb.ImageDim\022\024\n\014in"
    "lined_data\030\014 \001(\014\022;\n\016spriter_result\030\r \001(\013"
    "2#.net_instaweb.spriter.SpriterResult\022&\n"
    "\005input\030\016 \003(\0132\027.net_instaweb.InputInfo\022\032\n"
    "\022inlined_image_type\030\017 \001(\005\022#\n\033low_resolut"
    "ion_inlined_data\030\020 \001(\014\022)\n!low_resolution"
    "_inlined_image_type\030\021 \001(\005\022\035\n\017url_relocat"
    "able\030\022 \001(\010:\004true\022\030\n\020canonicalize_url\030\023 \001"
    "(\010\022\014\n\004size\030\024 \001(\003\022\025\n\rdebug_message\030\025 \003(\t\022"
    "@\n\025associated_image_info\030\027 \003(\0132!.net_ins"
    "taweb.AssociatedImageInfo\022!\n\031is_inline_o"
    "utput_resource\030\030 \001(\010\022\034\n\024optimized_image_"
    "type\030\031 \001(\005\0226\n\024collected_dependency\030\032 \003(\013"
    "2\030.net_instaweb.DependencyJ\004\010\026\020\027\"\213\001\n\020Out"
    "putPartitions\022-\n\tpartition\030\001 \003(\0132\032.net_i"
    "nstaweb.CachedResult\0221\n\020other_dependency"
    "\030\002 \003(\0132\027.net_instaweb.InputInfo\022\025\n\rdebug"
    "_message\030\003 \003(\t\"\225\003\n\017ResourceContext\0222\n\022de"
    "sired_image_dims\030\001 \001(\0132\026.net_instaweb.Im"
    "ageDim\022\033\n\rinline_images\030\003 \001(\010:\004true\022\031\n\021m"
    "obile_user_agent\030\004 \001(\010\022O\n\rlibwebp_level\030"
    "\005 \001(\0162*.net_instaweb.ResourceContext.Lib"
    "WebpLevel:\014LIBWEBP_NONE\022$\n\034may_use_small"
    "_screen_quality\030\007 \001(\010\022!\n\031may_use_save_da"
    "ta_quality\030\010 \001(\010\"p\n\014LibWebpLevel\022\020\n\014LIBW"
    "EBP_NONE\020\000\022\026\n\022LIBWEBP_LOSSY_ONLY\020\001\022 \n\034LI"
    "BWEBP_LOSSY_LOSSLESS_ALPHA\020\002\022\024\n\020LIBWEBP_"
    "ANIMATED\020\003J\004\010\002\020\003J\004\010\006\020\007", 1542);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/instaweb/rewriter/cached_result.proto", &protobuf_RegisterTypes);
  ImageDim::default_instance_ = new ImageDim();
  AssociatedImageInfo::default_instance_ = new AssociatedImageInfo();
  CachedResult::default_instance_ = new CachedResult();
  OutputPartitions::default_instance_ = new OutputPartitions();
  ResourceContext::default_instance_ = new ResourceContext();
  ImageDim::default_instance_->InitAsDefaultInstance();
  AssociatedImageInfo::default_instance_->InitAsDefaultInstance();
  CachedResult::default_instance_->InitAsDefaultInstance();
  OutputPartitions::default_instance_->InitAsDefaultInstance();
  ResourceContext::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto {
  StaticDescriptorInitializer_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto() {
    protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  }
} static_descriptor_initializer_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageDim::kWidthFieldNumber;
const int ImageDim::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageDim::ImageDim()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ImageDim)
}

void ImageDim::InitAsDefaultInstance() {
}

ImageDim::ImageDim(const ImageDim& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ImageDim)
}

void ImageDim::SharedCtor() {
  _cached_size_ = 0;
  width_ = -1;
  height_ = -1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImageDim::~ImageDim() {
  // @@protoc_insertion_point(destructor:net_instaweb.ImageDim)
  SharedDtor();
}

void ImageDim::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ImageDim::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageDim::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageDim_descriptor_;
}

const ImageDim& ImageDim::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  return *default_instance_;
}

ImageDim* ImageDim::default_instance_ = NULL;

ImageDim* ImageDim::New(::google::protobuf::Arena* arena) const {
  ImageDim* n = new ImageDim;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageDim::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ImageDim)
  if (_has_bits_[0 / 32] & 3u) {
    width_ = -1;
    height_ = -1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ImageDim::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ImageDim)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 width = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }

      // optional int32 height = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ImageDim)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ImageDim)
  return false;
#undef DO_
}

void ImageDim::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ImageDim)
  // optional int32 width = 1 [default = -1];
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // optional int32 height = 2 [default = -1];
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.ImageDim)
}

::google::protobuf::uint8* ImageDim::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ImageDim)
  // optional int32 width = 1 [default = -1];
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // optional int32 height = 2 [default = -1];
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ImageDim)
  return target;
}

int ImageDim::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ImageDim)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 width = 1 [default = -1];
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 height = 2 [default = -1];
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageDim::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ImageDim)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ImageDim* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageDim>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ImageDim)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ImageDim)
    MergeFrom(*source);
  }
}

void ImageDim::MergeFrom(const ImageDim& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ImageDim)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ImageDim::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ImageDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageDim::CopyFrom(const ImageDim& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ImageDim)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageDim::IsInitialized() const {

  return true;
}

void ImageDim::Swap(ImageDim* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageDim::InternalSwap(ImageDim* other) {
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageDim::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImageDim_descriptor_;
  metadata.reflection = ImageDim_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageDim

// optional int32 width = 1 [default = -1];
bool ImageDim::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImageDim::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
void ImageDim::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImageDim::clear_width() {
  width_ = -1;
  clear_has_width();
}
 ::google::protobuf::int32 ImageDim::width() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ImageDim.width)
  return width_;
}
 void ImageDim::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ImageDim.width)
}

// optional int32 height = 2 [default = -1];
bool ImageDim::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ImageDim::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
void ImageDim::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
void ImageDim::clear_height() {
  height_ = -1;
  clear_has_height();
}
 ::google::protobuf::int32 ImageDim::height() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ImageDim.height)
  return height_;
}
 void ImageDim::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ImageDim.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssociatedImageInfo::kUrlFieldNumber;
const int AssociatedImageInfo::kDimensionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssociatedImageInfo::AssociatedImageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.AssociatedImageInfo)
}

void AssociatedImageInfo::InitAsDefaultInstance() {
  dimensions_ = const_cast< ::net_instaweb::ImageDim*>(&::net_instaweb::ImageDim::default_instance());
}

AssociatedImageInfo::AssociatedImageInfo(const AssociatedImageInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.AssociatedImageInfo)
}

void AssociatedImageInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimensions_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AssociatedImageInfo::~AssociatedImageInfo() {
  // @@protoc_insertion_point(destructor:net_instaweb.AssociatedImageInfo)
  SharedDtor();
}

void AssociatedImageInfo::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete dimensions_;
  }
}

void AssociatedImageInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssociatedImageInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssociatedImageInfo_descriptor_;
}

const AssociatedImageInfo& AssociatedImageInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  return *default_instance_;
}

AssociatedImageInfo* AssociatedImageInfo::default_instance_ = NULL;

AssociatedImageInfo* AssociatedImageInfo::New(::google::protobuf::Arena* arena) const {
  AssociatedImageInfo* n = new AssociatedImageInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssociatedImageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.AssociatedImageInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_url()) {
      url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dimensions()) {
      if (dimensions_ != NULL) dimensions_->::net_instaweb::ImageDim::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AssociatedImageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.AssociatedImageInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.AssociatedImageInfo.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dimensions;
        break;
      }

      // optional .net_instaweb.ImageDim dimensions = 2;
      case 2: {
        if (tag == 18) {
         parse_dimensions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dimensions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.AssociatedImageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.AssociatedImageInfo)
  return false;
#undef DO_
}

void AssociatedImageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.AssociatedImageInfo)
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.AssociatedImageInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // optional .net_instaweb.ImageDim dimensions = 2;
  if (has_dimensions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dimensions_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.AssociatedImageInfo)
}

::google::protobuf::uint8* AssociatedImageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.AssociatedImageInfo)
  // optional string url = 1;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.AssociatedImageInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // optional .net_instaweb.ImageDim dimensions = 2;
  if (has_dimensions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dimensions_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.AssociatedImageInfo)
  return target;
}

int AssociatedImageInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.AssociatedImageInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 1;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .net_instaweb.ImageDim dimensions = 2;
    if (has_dimensions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dimensions_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssociatedImageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.AssociatedImageInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AssociatedImageInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AssociatedImageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.AssociatedImageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.AssociatedImageInfo)
    MergeFrom(*source);
  }
}

void AssociatedImageInfo::MergeFrom(const AssociatedImageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.AssociatedImageInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (from.has_dimensions()) {
      mutable_dimensions()->::net_instaweb::ImageDim::MergeFrom(from.dimensions());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AssociatedImageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.AssociatedImageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssociatedImageInfo::CopyFrom(const AssociatedImageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.AssociatedImageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociatedImageInfo::IsInitialized() const {

  return true;
}

void AssociatedImageInfo::Swap(AssociatedImageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssociatedImageInfo::InternalSwap(AssociatedImageInfo* other) {
  url_.Swap(&other->url_);
  std::swap(dimensions_, other->dimensions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssociatedImageInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssociatedImageInfo_descriptor_;
  metadata.reflection = AssociatedImageInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssociatedImageInfo

// optional string url = 1;
bool AssociatedImageInfo::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AssociatedImageInfo::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void AssociatedImageInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void AssociatedImageInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
 const ::std::string& AssociatedImageInfo::url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.AssociatedImageInfo.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssociatedImageInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.AssociatedImageInfo.url)
}
 void AssociatedImageInfo::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.AssociatedImageInfo.url)
}
 void AssociatedImageInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.AssociatedImageInfo.url)
}
 ::std::string* AssociatedImageInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:net_instaweb.AssociatedImageInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssociatedImageInfo::release_url() {
  // @@protoc_insertion_point(field_release:net_instaweb.AssociatedImageInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssociatedImageInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.AssociatedImageInfo.url)
}

// optional .net_instaweb.ImageDim dimensions = 2;
bool AssociatedImageInfo::has_dimensions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AssociatedImageInfo::set_has_dimensions() {
  _has_bits_[0] |= 0x00000002u;
}
void AssociatedImageInfo::clear_has_dimensions() {
  _has_bits_[0] &= ~0x00000002u;
}
void AssociatedImageInfo::clear_dimensions() {
  if (dimensions_ != NULL) dimensions_->::net_instaweb::ImageDim::Clear();
  clear_has_dimensions();
}
const ::net_instaweb::ImageDim& AssociatedImageInfo::dimensions() const {
  // @@protoc_insertion_point(field_get:net_instaweb.AssociatedImageInfo.dimensions)
  return dimensions_ != NULL ? *dimensions_ : *default_instance_->dimensions_;
}
::net_instaweb::ImageDim* AssociatedImageInfo::mutable_dimensions() {
  set_has_dimensions();
  if (dimensions_ == NULL) {
    dimensions_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.AssociatedImageInfo.dimensions)
  return dimensions_;
}
::net_instaweb::ImageDim* AssociatedImageInfo::release_dimensions() {
  // @@protoc_insertion_point(field_release:net_instaweb.AssociatedImageInfo.dimensions)
  clear_has_dimensions();
  ::net_instaweb::ImageDim* temp = dimensions_;
  dimensions_ = NULL;
  return temp;
}
void AssociatedImageInfo::set_allocated_dimensions(::net_instaweb::ImageDim* dimensions) {
  delete dimensions_;
  dimensions_ = dimensions;
  if (dimensions) {
    set_has_dimensions();
  } else {
    clear_has_dimensions();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.AssociatedImageInfo.dimensions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CachedResult::kOptimizableFieldNumber;
const int CachedResult::kUrlFieldNumber;
const int CachedResult::kFrozenFieldNumber;
const int CachedResult::kHashFieldNumber;
const int CachedResult::kExtensionFieldNumber;
const int CachedResult::kImageFileDimsFieldNumber;
const int CachedResult::kInlinedDataFieldNumber;
const int CachedResult::kSpriterResultFieldNumber;
const int CachedResult::kInputFieldNumber;
const int CachedResult::kInlinedImageTypeFieldNumber;
const int CachedResult::kLowResolutionInlinedDataFieldNumber;
const int CachedResult::kLowResolutionInlinedImageTypeFieldNumber;
const int CachedResult::kUrlRelocatableFieldNumber;
const int CachedResult::kCanonicalizeUrlFieldNumber;
const int CachedResult::kSizeFieldNumber;
const int CachedResult::kDebugMessageFieldNumber;
const int CachedResult::kAssociatedImageInfoFieldNumber;
const int CachedResult::kIsInlineOutputResourceFieldNumber;
const int CachedResult::kOptimizedImageTypeFieldNumber;
const int CachedResult::kCollectedDependencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CachedResult::CachedResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.CachedResult)
}

void CachedResult::InitAsDefaultInstance() {
  image_file_dims_ = const_cast< ::net_instaweb::ImageDim*>(&::net_instaweb::ImageDim::default_instance());
  spriter_result_ = const_cast< ::net_instaweb::spriter::SpriterResult*>(&::net_instaweb::spriter::SpriterResult::default_instance());
}

CachedResult::CachedResult(const CachedResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.CachedResult)
}

void CachedResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  optimizable_ = true;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frozen_ = false;
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_file_dims_ = NULL;
  inlined_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spriter_result_ = NULL;
  inlined_image_type_ = 0;
  low_resolution_inlined_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_resolution_inlined_image_type_ = 0;
  url_relocatable_ = true;
  canonicalize_url_ = false;
  size_ = GOOGLE_LONGLONG(0);
  is_inline_output_resource_ = false;
  optimized_image_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CachedResult::~CachedResult() {
  // @@protoc_insertion_point(destructor:net_instaweb.CachedResult)
  SharedDtor();
}

void CachedResult::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inlined_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  low_resolution_inlined_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete image_file_dims_;
    delete spriter_result_;
  }
}

void CachedResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CachedResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CachedResult_descriptor_;
}

const CachedResult& CachedResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  return *default_instance_;
}

CachedResult* CachedResult::default_instance_ = NULL;

CachedResult* CachedResult::New(::google::protobuf::Arena* arena) const {
  CachedResult* n = new CachedResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CachedResult::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.CachedResult)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CachedResult, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CachedResult*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    optimizable_ = true;
    if (has_url()) {
      url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    frozen_ = false;
    if (has_hash()) {
      hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_extension()) {
      extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_image_file_dims()) {
      if (image_file_dims_ != NULL) image_file_dims_->::net_instaweb::ImageDim::Clear();
    }
    if (has_inlined_data()) {
      inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_spriter_result()) {
      if (spriter_result_ != NULL) spriter_result_->::net_instaweb::spriter::SpriterResult::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 32256u) {
    ZR_(canonicalize_url_, inlined_image_type_);
    ZR_(size_, low_resolution_inlined_image_type_);
    if (has_low_resolution_inlined_data()) {
      low_resolution_inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    url_relocatable_ = true;
  }
  if (_has_bits_[16 / 32] & 393216u) {
    is_inline_output_resource_ = false;
    optimized_image_type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  input_.Clear();
  debug_message_.Clear();
  associated_image_info_.Clear();
  collected_dependency_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CachedResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.CachedResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool optimizable = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &optimizable_)));
          set_has_optimizable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_url;
        break;
      }

      // optional string url = 2;
      case 2: {
        if (tag == 18) {
         parse_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.CachedResult.url");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_frozen;
        break;
      }

      // optional bool frozen = 5;
      case 5: {
        if (tag == 40) {
         parse_frozen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &frozen_)));
          set_has_frozen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_hash;
        break;
      }

      // optional string hash = 6;
      case 6: {
        if (tag == 50) {
         parse_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hash().data(), this->hash().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.CachedResult.hash");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_extension;
        break;
      }

      // optional string extension = 7;
      case 7: {
        if (tag == 58) {
         parse_extension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extension()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extension().data(), this->extension().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.CachedResult.extension");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_image_file_dims;
        break;
      }

      // optional .net_instaweb.ImageDim image_file_dims = 11;
      case 11: {
        if (tag == 90) {
         parse_image_file_dims:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image_file_dims()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_inlined_data;
        break;
      }

      // optional bytes inlined_data = 12;
      case 12: {
        if (tag == 98) {
         parse_inlined_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inlined_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_spriter_result;
        break;
      }

      // optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
      case 13: {
        if (tag == 106) {
         parse_spriter_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spriter_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_input;
        break;
      }

      // repeated .net_instaweb.InputInfo input = 14;
      case 14: {
        if (tag == 114) {
         parse_input:
          DO_(input->IncrementRecursionDepth());
         parse_loop_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_loop_input;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(120)) goto parse_inlined_image_type;
        break;
      }

      // optional int32 inlined_image_type = 15;
      case 15: {
        if (tag == 120) {
         parse_inlined_image_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inlined_image_type_)));
          set_has_inlined_image_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_low_resolution_inlined_data;
        break;
      }

      // optional bytes low_resolution_inlined_data = 16;
      case 16: {
        if (tag == 130) {
         parse_low_resolution_inlined_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_low_resolution_inlined_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_low_resolution_inlined_image_type;
        break;
      }

      // optional int32 low_resolution_inlined_image_type = 17;
      case 17: {
        if (tag == 136) {
         parse_low_resolution_inlined_image_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &low_resolution_inlined_image_type_)));
          set_has_low_resolution_inlined_image_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_url_relocatable;
        break;
      }

      // optional bool url_relocatable = 18 [default = true];
      case 18: {
        if (tag == 144) {
         parse_url_relocatable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &url_relocatable_)));
          set_has_url_relocatable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_canonicalize_url;
        break;
      }

      // optional bool canonicalize_url = 19;
      case 19: {
        if (tag == 152) {
         parse_canonicalize_url:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canonicalize_url_)));
          set_has_canonicalize_url();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_size;
        break;
      }

      // optional int64 size = 20;
      case 20: {
        if (tag == 160) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_debug_message;
        break;
      }

      // repeated string debug_message = 21;
      case 21: {
        if (tag == 170) {
         parse_debug_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_debug_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->debug_message(this->debug_message_size() - 1).data(),
            this->debug_message(this->debug_message_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.CachedResult.debug_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_debug_message;
        if (input->ExpectTag(186)) goto parse_associated_image_info;
        break;
      }

      // repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
      case 23: {
        if (tag == 186) {
         parse_associated_image_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_associated_image_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_associated_image_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_loop_associated_image_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(192)) goto parse_is_inline_output_resource;
        break;
      }

      // optional bool is_inline_output_resource = 24;
      case 24: {
        if (tag == 192) {
         parse_is_inline_output_resource:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inline_output_resource_)));
          set_has_is_inline_output_resource();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_optimized_image_type;
        break;
      }

      // optional int32 optimized_image_type = 25;
      case 25: {
        if (tag == 200) {
         parse_optimized_image_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &optimized_image_type_)));
          set_has_optimized_image_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_collected_dependency;
        break;
      }

      // repeated .net_instaweb.Dependency collected_dependency = 26;
      case 26: {
        if (tag == 210) {
         parse_collected_dependency:
          DO_(input->IncrementRecursionDepth());
         parse_loop_collected_dependency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_collected_dependency()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_loop_collected_dependency;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.CachedResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.CachedResult)
  return false;
#undef DO_
}

void CachedResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.CachedResult)
  // optional bool optimizable = 1 [default = true];
  if (has_optimizable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->optimizable(), output);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional bool frozen = 5;
  if (has_frozen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->frozen(), output);
  }

  // optional string hash = 6;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->hash(), output);
  }

  // optional string extension = 7;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extension().data(), this->extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.extension");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extension(), output);
  }

  // optional .net_instaweb.ImageDim image_file_dims = 11;
  if (has_image_file_dims()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->image_file_dims_, output);
  }

  // optional bytes inlined_data = 12;
  if (has_inlined_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->inlined_data(), output);
  }

  // optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
  if (has_spriter_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->spriter_result_, output);
  }

  // repeated .net_instaweb.InputInfo input = 14;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->input(i), output);
  }

  // optional int32 inlined_image_type = 15;
  if (has_inlined_image_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->inlined_image_type(), output);
  }

  // optional bytes low_resolution_inlined_data = 16;
  if (has_low_resolution_inlined_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->low_resolution_inlined_data(), output);
  }

  // optional int32 low_resolution_inlined_image_type = 17;
  if (has_low_resolution_inlined_image_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->low_resolution_inlined_image_type(), output);
  }

  // optional bool url_relocatable = 18 [default = true];
  if (has_url_relocatable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->url_relocatable(), output);
  }

  // optional bool canonicalize_url = 19;
  if (has_canonicalize_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->canonicalize_url(), output);
  }

  // optional int64 size = 20;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->size(), output);
  }

  // repeated string debug_message = 21;
  for (int i = 0; i < this->debug_message_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->debug_message(i).data(), this->debug_message(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.debug_message");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->debug_message(i), output);
  }

  // repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
  for (unsigned int i = 0, n = this->associated_image_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->associated_image_info(i), output);
  }

  // optional bool is_inline_output_resource = 24;
  if (has_is_inline_output_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->is_inline_output_resource(), output);
  }

  // optional int32 optimized_image_type = 25;
  if (has_optimized_image_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->optimized_image_type(), output);
  }

  // repeated .net_instaweb.Dependency collected_dependency = 26;
  for (unsigned int i = 0, n = this->collected_dependency_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->collected_dependency(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.CachedResult)
}

::google::protobuf::uint8* CachedResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.CachedResult)
  // optional bool optimizable = 1 [default = true];
  if (has_optimizable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->optimizable(), target);
  }

  // optional string url = 2;
  if (has_url()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional bool frozen = 5;
  if (has_frozen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->frozen(), target);
  }

  // optional string hash = 6;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hash(), target);
  }

  // optional string extension = 7;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extension().data(), this->extension().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.extension");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->extension(), target);
  }

  // optional .net_instaweb.ImageDim image_file_dims = 11;
  if (has_image_file_dims()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->image_file_dims_, false, target);
  }

  // optional bytes inlined_data = 12;
  if (has_inlined_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->inlined_data(), target);
  }

  // optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
  if (has_spriter_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->spriter_result_, false, target);
  }

  // repeated .net_instaweb.InputInfo input = 14;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->input(i), false, target);
  }

  // optional int32 inlined_image_type = 15;
  if (has_inlined_image_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->inlined_image_type(), target);
  }

  // optional bytes low_resolution_inlined_data = 16;
  if (has_low_resolution_inlined_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->low_resolution_inlined_data(), target);
  }

  // optional int32 low_resolution_inlined_image_type = 17;
  if (has_low_resolution_inlined_image_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->low_resolution_inlined_image_type(), target);
  }

  // optional bool url_relocatable = 18 [default = true];
  if (has_url_relocatable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->url_relocatable(), target);
  }

  // optional bool canonicalize_url = 19;
  if (has_canonicalize_url()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->canonicalize_url(), target);
  }

  // optional int64 size = 20;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->size(), target);
  }

  // repeated string debug_message = 21;
  for (int i = 0; i < this->debug_message_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->debug_message(i).data(), this->debug_message(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.CachedResult.debug_message");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(21, this->debug_message(i), target);
  }

  // repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
  for (unsigned int i = 0, n = this->associated_image_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, this->associated_image_info(i), false, target);
  }

  // optional bool is_inline_output_resource = 24;
  if (has_is_inline_output_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->is_inline_output_resource(), target);
  }

  // optional int32 optimized_image_type = 25;
  if (has_optimized_image_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->optimized_image_type(), target);
  }

  // repeated .net_instaweb.Dependency collected_dependency = 26;
  for (unsigned int i = 0, n = this->collected_dependency_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, this->collected_dependency(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.CachedResult)
  return target;
}

int CachedResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.CachedResult)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool optimizable = 1 [default = true];
    if (has_optimizable()) {
      total_size += 1 + 1;
    }

    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional bool frozen = 5;
    if (has_frozen()) {
      total_size += 1 + 1;
    }

    // optional string hash = 6;
    if (has_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hash());
    }

    // optional string extension = 7;
    if (has_extension()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extension());
    }

    // optional .net_instaweb.ImageDim image_file_dims = 11;
    if (has_image_file_dims()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->image_file_dims_);
    }

    // optional bytes inlined_data = 12;
    if (has_inlined_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inlined_data());
    }

    // optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
    if (has_spriter_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->spriter_result_);
    }

  }
  if (_has_bits_[9 / 32] & 32256u) {
    // optional int32 inlined_image_type = 15;
    if (has_inlined_image_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inlined_image_type());
    }

    // optional bytes low_resolution_inlined_data = 16;
    if (has_low_resolution_inlined_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->low_resolution_inlined_data());
    }

    // optional int32 low_resolution_inlined_image_type = 17;
    if (has_low_resolution_inlined_image_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->low_resolution_inlined_image_type());
    }

    // optional bool url_relocatable = 18 [default = true];
    if (has_url_relocatable()) {
      total_size += 2 + 1;
    }

    // optional bool canonicalize_url = 19;
    if (has_canonicalize_url()) {
      total_size += 2 + 1;
    }

    // optional int64 size = 20;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

  }
  if (_has_bits_[17 / 32] & 393216u) {
    // optional bool is_inline_output_resource = 24;
    if (has_is_inline_output_resource()) {
      total_size += 2 + 1;
    }

    // optional int32 optimized_image_type = 25;
    if (has_optimized_image_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->optimized_image_type());
    }

  }
  // repeated .net_instaweb.InputInfo input = 14;
  total_size += 1 * this->input_size();
  for (int i = 0; i < this->input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->input(i));
  }

  // repeated string debug_message = 21;
  total_size += 2 * this->debug_message_size();
  for (int i = 0; i < this->debug_message_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->debug_message(i));
  }

  // repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
  total_size += 2 * this->associated_image_info_size();
  for (int i = 0; i < this->associated_image_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->associated_image_info(i));
  }

  // repeated .net_instaweb.Dependency collected_dependency = 26;
  total_size += 2 * this->collected_dependency_size();
  for (int i = 0; i < this->collected_dependency_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->collected_dependency(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CachedResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.CachedResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CachedResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CachedResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.CachedResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.CachedResult)
    MergeFrom(*source);
  }
}

void CachedResult::MergeFrom(const CachedResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.CachedResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  input_.MergeFrom(from.input_);
  debug_message_.MergeFrom(from.debug_message_);
  associated_image_info_.MergeFrom(from.associated_image_info_);
  collected_dependency_.MergeFrom(from.collected_dependency_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_optimizable()) {
      set_optimizable(from.optimizable());
    }
    if (from.has_url()) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (from.has_frozen()) {
      set_frozen(from.frozen());
    }
    if (from.has_hash()) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
    if (from.has_extension()) {
      set_has_extension();
      extension_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extension_);
    }
    if (from.has_image_file_dims()) {
      mutable_image_file_dims()->::net_instaweb::ImageDim::MergeFrom(from.image_file_dims());
    }
    if (from.has_inlined_data()) {
      set_has_inlined_data();
      inlined_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inlined_data_);
    }
    if (from.has_spriter_result()) {
      mutable_spriter_result()->::net_instaweb::spriter::SpriterResult::MergeFrom(from.spriter_result());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_inlined_image_type()) {
      set_inlined_image_type(from.inlined_image_type());
    }
    if (from.has_low_resolution_inlined_data()) {
      set_has_low_resolution_inlined_data();
      low_resolution_inlined_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.low_resolution_inlined_data_);
    }
    if (from.has_low_resolution_inlined_image_type()) {
      set_low_resolution_inlined_image_type(from.low_resolution_inlined_image_type());
    }
    if (from.has_url_relocatable()) {
      set_url_relocatable(from.url_relocatable());
    }
    if (from.has_canonicalize_url()) {
      set_canonicalize_url(from.canonicalize_url());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  if (from._has_bits_[17 / 32] & (0xffu << (17 % 32))) {
    if (from.has_is_inline_output_resource()) {
      set_is_inline_output_resource(from.is_inline_output_resource());
    }
    if (from.has_optimized_image_type()) {
      set_optimized_image_type(from.optimized_image_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CachedResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.CachedResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CachedResult::CopyFrom(const CachedResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.CachedResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CachedResult::IsInitialized() const {

  if (has_spriter_result()) {
    if (!this->spriter_result_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->input())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->collected_dependency())) return false;
  return true;
}

void CachedResult::Swap(CachedResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CachedResult::InternalSwap(CachedResult* other) {
  std::swap(optimizable_, other->optimizable_);
  url_.Swap(&other->url_);
  std::swap(frozen_, other->frozen_);
  hash_.Swap(&other->hash_);
  extension_.Swap(&other->extension_);
  std::swap(image_file_dims_, other->image_file_dims_);
  inlined_data_.Swap(&other->inlined_data_);
  std::swap(spriter_result_, other->spriter_result_);
  input_.UnsafeArenaSwap(&other->input_);
  std::swap(inlined_image_type_, other->inlined_image_type_);
  low_resolution_inlined_data_.Swap(&other->low_resolution_inlined_data_);
  std::swap(low_resolution_inlined_image_type_, other->low_resolution_inlined_image_type_);
  std::swap(url_relocatable_, other->url_relocatable_);
  std::swap(canonicalize_url_, other->canonicalize_url_);
  std::swap(size_, other->size_);
  debug_message_.UnsafeArenaSwap(&other->debug_message_);
  associated_image_info_.UnsafeArenaSwap(&other->associated_image_info_);
  std::swap(is_inline_output_resource_, other->is_inline_output_resource_);
  std::swap(optimized_image_type_, other->optimized_image_type_);
  collected_dependency_.UnsafeArenaSwap(&other->collected_dependency_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CachedResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CachedResult_descriptor_;
  metadata.reflection = CachedResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CachedResult

// optional bool optimizable = 1 [default = true];
bool CachedResult::has_optimizable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CachedResult::set_has_optimizable() {
  _has_bits_[0] |= 0x00000001u;
}
void CachedResult::clear_has_optimizable() {
  _has_bits_[0] &= ~0x00000001u;
}
void CachedResult::clear_optimizable() {
  optimizable_ = true;
  clear_has_optimizable();
}
 bool CachedResult::optimizable() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.optimizable)
  return optimizable_;
}
 void CachedResult::set_optimizable(bool value) {
  set_has_optimizable();
  optimizable_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.optimizable)
}

// optional string url = 2;
bool CachedResult::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CachedResult::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void CachedResult::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void CachedResult::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
 const ::std::string& CachedResult::url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.url)
}
 void CachedResult::set_url(const char* value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.url)
}
 void CachedResult::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.url)
}
 ::std::string* CachedResult::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CachedResult::release_url() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.url)
}

// optional bool frozen = 5;
bool CachedResult::has_frozen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CachedResult::set_has_frozen() {
  _has_bits_[0] |= 0x00000004u;
}
void CachedResult::clear_has_frozen() {
  _has_bits_[0] &= ~0x00000004u;
}
void CachedResult::clear_frozen() {
  frozen_ = false;
  clear_has_frozen();
}
 bool CachedResult::frozen() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.frozen)
  return frozen_;
}
 void CachedResult::set_frozen(bool value) {
  set_has_frozen();
  frozen_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.frozen)
}

// optional string hash = 6;
bool CachedResult::has_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CachedResult::set_has_hash() {
  _has_bits_[0] |= 0x00000008u;
}
void CachedResult::clear_has_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
void CachedResult::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash();
}
 const ::std::string& CachedResult::hash() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_hash(const ::std::string& value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.hash)
}
 void CachedResult::set_hash(const char* value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.hash)
}
 void CachedResult::set_hash(const char* value, size_t size) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.hash)
}
 ::std::string* CachedResult::mutable_hash() {
  set_has_hash();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CachedResult::release_hash() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.hash)
  clear_has_hash();
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    set_has_hash();
  } else {
    clear_has_hash();
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.hash)
}

// optional string extension = 7;
bool CachedResult::has_extension() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CachedResult::set_has_extension() {
  _has_bits_[0] |= 0x00000010u;
}
void CachedResult::clear_has_extension() {
  _has_bits_[0] &= ~0x00000010u;
}
void CachedResult::clear_extension() {
  extension_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extension();
}
 const ::std::string& CachedResult::extension() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.extension)
  return extension_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_extension(const ::std::string& value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.extension)
}
 void CachedResult::set_extension(const char* value) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.extension)
}
 void CachedResult::set_extension(const char* value, size_t size) {
  set_has_extension();
  extension_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.extension)
}
 ::std::string* CachedResult::mutable_extension() {
  set_has_extension();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.extension)
  return extension_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CachedResult::release_extension() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.extension)
  clear_has_extension();
  return extension_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_allocated_extension(::std::string* extension) {
  if (extension != NULL) {
    set_has_extension();
  } else {
    clear_has_extension();
  }
  extension_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extension);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.extension)
}

// optional .net_instaweb.ImageDim image_file_dims = 11;
bool CachedResult::has_image_file_dims() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CachedResult::set_has_image_file_dims() {
  _has_bits_[0] |= 0x00000020u;
}
void CachedResult::clear_has_image_file_dims() {
  _has_bits_[0] &= ~0x00000020u;
}
void CachedResult::clear_image_file_dims() {
  if (image_file_dims_ != NULL) image_file_dims_->::net_instaweb::ImageDim::Clear();
  clear_has_image_file_dims();
}
const ::net_instaweb::ImageDim& CachedResult::image_file_dims() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.image_file_dims)
  return image_file_dims_ != NULL ? *image_file_dims_ : *default_instance_->image_file_dims_;
}
::net_instaweb::ImageDim* CachedResult::mutable_image_file_dims() {
  set_has_image_file_dims();
  if (image_file_dims_ == NULL) {
    image_file_dims_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.image_file_dims)
  return image_file_dims_;
}
::net_instaweb::ImageDim* CachedResult::release_image_file_dims() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.image_file_dims)
  clear_has_image_file_dims();
  ::net_instaweb::ImageDim* temp = image_file_dims_;
  image_file_dims_ = NULL;
  return temp;
}
void CachedResult::set_allocated_image_file_dims(::net_instaweb::ImageDim* image_file_dims) {
  delete image_file_dims_;
  image_file_dims_ = image_file_dims;
  if (image_file_dims) {
    set_has_image_file_dims();
  } else {
    clear_has_image_file_dims();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.image_file_dims)
}

// optional bytes inlined_data = 12;
bool CachedResult::has_inlined_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CachedResult::set_has_inlined_data() {
  _has_bits_[0] |= 0x00000040u;
}
void CachedResult::clear_has_inlined_data() {
  _has_bits_[0] &= ~0x00000040u;
}
void CachedResult::clear_inlined_data() {
  inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inlined_data();
}
 const ::std::string& CachedResult::inlined_data() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.inlined_data)
  return inlined_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_inlined_data(const ::std::string& value) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.inlined_data)
}
 void CachedResult::set_inlined_data(const char* value) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.inlined_data)
}
 void CachedResult::set_inlined_data(const void* value, size_t size) {
  set_has_inlined_data();
  inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.inlined_data)
}
 ::std::string* CachedResult::mutable_inlined_data() {
  set_has_inlined_data();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.inlined_data)
  return inlined_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CachedResult::release_inlined_data() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.inlined_data)
  clear_has_inlined_data();
  return inlined_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_allocated_inlined_data(::std::string* inlined_data) {
  if (inlined_data != NULL) {
    set_has_inlined_data();
  } else {
    clear_has_inlined_data();
  }
  inlined_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inlined_data);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.inlined_data)
}

// optional .net_instaweb.spriter.SpriterResult spriter_result = 13;
bool CachedResult::has_spriter_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CachedResult::set_has_spriter_result() {
  _has_bits_[0] |= 0x00000080u;
}
void CachedResult::clear_has_spriter_result() {
  _has_bits_[0] &= ~0x00000080u;
}
void CachedResult::clear_spriter_result() {
  if (spriter_result_ != NULL) spriter_result_->::net_instaweb::spriter::SpriterResult::Clear();
  clear_has_spriter_result();
}
const ::net_instaweb::spriter::SpriterResult& CachedResult::spriter_result() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.spriter_result)
  return spriter_result_ != NULL ? *spriter_result_ : *default_instance_->spriter_result_;
}
::net_instaweb::spriter::SpriterResult* CachedResult::mutable_spriter_result() {
  set_has_spriter_result();
  if (spriter_result_ == NULL) {
    spriter_result_ = new ::net_instaweb::spriter::SpriterResult;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.spriter_result)
  return spriter_result_;
}
::net_instaweb::spriter::SpriterResult* CachedResult::release_spriter_result() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.spriter_result)
  clear_has_spriter_result();
  ::net_instaweb::spriter::SpriterResult* temp = spriter_result_;
  spriter_result_ = NULL;
  return temp;
}
void CachedResult::set_allocated_spriter_result(::net_instaweb::spriter::SpriterResult* spriter_result) {
  delete spriter_result_;
  spriter_result_ = spriter_result;
  if (spriter_result) {
    set_has_spriter_result();
  } else {
    clear_has_spriter_result();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.spriter_result)
}

// repeated .net_instaweb.InputInfo input = 14;
int CachedResult::input_size() const {
  return input_.size();
}
void CachedResult::clear_input() {
  input_.Clear();
}
const ::net_instaweb::InputInfo& CachedResult::input(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.input)
  return input_.Get(index);
}
::net_instaweb::InputInfo* CachedResult::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.input)
  return input_.Mutable(index);
}
::net_instaweb::InputInfo* CachedResult::add_input() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.input)
  return input_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
CachedResult::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.input)
  return &input_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
CachedResult::input() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.input)
  return input_;
}

// optional int32 inlined_image_type = 15;
bool CachedResult::has_inlined_image_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CachedResult::set_has_inlined_image_type() {
  _has_bits_[0] |= 0x00000200u;
}
void CachedResult::clear_has_inlined_image_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void CachedResult::clear_inlined_image_type() {
  inlined_image_type_ = 0;
  clear_has_inlined_image_type();
}
 ::google::protobuf::int32 CachedResult::inlined_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.inlined_image_type)
  return inlined_image_type_;
}
 void CachedResult::set_inlined_image_type(::google::protobuf::int32 value) {
  set_has_inlined_image_type();
  inlined_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.inlined_image_type)
}

// optional bytes low_resolution_inlined_data = 16;
bool CachedResult::has_low_resolution_inlined_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CachedResult::set_has_low_resolution_inlined_data() {
  _has_bits_[0] |= 0x00000400u;
}
void CachedResult::clear_has_low_resolution_inlined_data() {
  _has_bits_[0] &= ~0x00000400u;
}
void CachedResult::clear_low_resolution_inlined_data() {
  low_resolution_inlined_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_low_resolution_inlined_data();
}
 const ::std::string& CachedResult::low_resolution_inlined_data() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.low_resolution_inlined_data)
  return low_resolution_inlined_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_low_resolution_inlined_data(const ::std::string& value) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.low_resolution_inlined_data)
}
 void CachedResult::set_low_resolution_inlined_data(const char* value) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.low_resolution_inlined_data)
}
 void CachedResult::set_low_resolution_inlined_data(const void* value, size_t size) {
  set_has_low_resolution_inlined_data();
  low_resolution_inlined_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.low_resolution_inlined_data)
}
 ::std::string* CachedResult::mutable_low_resolution_inlined_data() {
  set_has_low_resolution_inlined_data();
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.low_resolution_inlined_data)
  return low_resolution_inlined_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CachedResult::release_low_resolution_inlined_data() {
  // @@protoc_insertion_point(field_release:net_instaweb.CachedResult.low_resolution_inlined_data)
  clear_has_low_resolution_inlined_data();
  return low_resolution_inlined_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CachedResult::set_allocated_low_resolution_inlined_data(::std::string* low_resolution_inlined_data) {
  if (low_resolution_inlined_data != NULL) {
    set_has_low_resolution_inlined_data();
  } else {
    clear_has_low_resolution_inlined_data();
  }
  low_resolution_inlined_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), low_resolution_inlined_data);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CachedResult.low_resolution_inlined_data)
}

// optional int32 low_resolution_inlined_image_type = 17;
bool CachedResult::has_low_resolution_inlined_image_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CachedResult::set_has_low_resolution_inlined_image_type() {
  _has_bits_[0] |= 0x00000800u;
}
void CachedResult::clear_has_low_resolution_inlined_image_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void CachedResult::clear_low_resolution_inlined_image_type() {
  low_resolution_inlined_image_type_ = 0;
  clear_has_low_resolution_inlined_image_type();
}
 ::google::protobuf::int32 CachedResult::low_resolution_inlined_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.low_resolution_inlined_image_type)
  return low_resolution_inlined_image_type_;
}
 void CachedResult::set_low_resolution_inlined_image_type(::google::protobuf::int32 value) {
  set_has_low_resolution_inlined_image_type();
  low_resolution_inlined_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.low_resolution_inlined_image_type)
}

// optional bool url_relocatable = 18 [default = true];
bool CachedResult::has_url_relocatable() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CachedResult::set_has_url_relocatable() {
  _has_bits_[0] |= 0x00001000u;
}
void CachedResult::clear_has_url_relocatable() {
  _has_bits_[0] &= ~0x00001000u;
}
void CachedResult::clear_url_relocatable() {
  url_relocatable_ = true;
  clear_has_url_relocatable();
}
 bool CachedResult::url_relocatable() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.url_relocatable)
  return url_relocatable_;
}
 void CachedResult::set_url_relocatable(bool value) {
  set_has_url_relocatable();
  url_relocatable_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.url_relocatable)
}

// optional bool canonicalize_url = 19;
bool CachedResult::has_canonicalize_url() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CachedResult::set_has_canonicalize_url() {
  _has_bits_[0] |= 0x00002000u;
}
void CachedResult::clear_has_canonicalize_url() {
  _has_bits_[0] &= ~0x00002000u;
}
void CachedResult::clear_canonicalize_url() {
  canonicalize_url_ = false;
  clear_has_canonicalize_url();
}
 bool CachedResult::canonicalize_url() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.canonicalize_url)
  return canonicalize_url_;
}
 void CachedResult::set_canonicalize_url(bool value) {
  set_has_canonicalize_url();
  canonicalize_url_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.canonicalize_url)
}

// optional int64 size = 20;
bool CachedResult::has_size() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CachedResult::set_has_size() {
  _has_bits_[0] |= 0x00004000u;
}
void CachedResult::clear_has_size() {
  _has_bits_[0] &= ~0x00004000u;
}
void CachedResult::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
 ::google::protobuf::int64 CachedResult::size() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.size)
  return size_;
}
 void CachedResult::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.size)
}

// repeated string debug_message = 21;
int CachedResult::debug_message_size() const {
  return debug_message_.size();
}
void CachedResult::clear_debug_message() {
  debug_message_.Clear();
}
 const ::std::string& CachedResult::debug_message(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.debug_message)
  return debug_message_.Get(index);
}
 ::std::string* CachedResult::mutable_debug_message(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.debug_message)
  return debug_message_.Mutable(index);
}
 void CachedResult::set_debug_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.debug_message)
  debug_message_.Mutable(index)->assign(value);
}
 void CachedResult::set_debug_message(int index, const char* value) {
  debug_message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:net_instaweb.CachedResult.debug_message)
}
 void CachedResult::set_debug_message(int index, const char* value, size_t size) {
  debug_message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.CachedResult.debug_message)
}
 ::std::string* CachedResult::add_debug_message() {
  // @@protoc_insertion_point(field_add_mutable:net_instaweb.CachedResult.debug_message)
  return debug_message_.Add();
}
 void CachedResult::add_debug_message(const ::std::string& value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.debug_message)
}
 void CachedResult::add_debug_message(const char* value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:net_instaweb.CachedResult.debug_message)
}
 void CachedResult::add_debug_message(const char* value, size_t size) {
  debug_message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:net_instaweb.CachedResult.debug_message)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CachedResult::debug_message() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.debug_message)
  return debug_message_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CachedResult::mutable_debug_message() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.debug_message)
  return &debug_message_;
}

// repeated .net_instaweb.AssociatedImageInfo associated_image_info = 23;
int CachedResult::associated_image_info_size() const {
  return associated_image_info_.size();
}
void CachedResult::clear_associated_image_info() {
  associated_image_info_.Clear();
}
const ::net_instaweb::AssociatedImageInfo& CachedResult::associated_image_info(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Get(index);
}
::net_instaweb::AssociatedImageInfo* CachedResult::mutable_associated_image_info(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Mutable(index);
}
::net_instaweb::AssociatedImageInfo* CachedResult::add_associated_image_info() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >*
CachedResult::mutable_associated_image_info() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.associated_image_info)
  return &associated_image_info_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::AssociatedImageInfo >&
CachedResult::associated_image_info() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.associated_image_info)
  return associated_image_info_;
}

// optional bool is_inline_output_resource = 24;
bool CachedResult::has_is_inline_output_resource() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CachedResult::set_has_is_inline_output_resource() {
  _has_bits_[0] |= 0x00020000u;
}
void CachedResult::clear_has_is_inline_output_resource() {
  _has_bits_[0] &= ~0x00020000u;
}
void CachedResult::clear_is_inline_output_resource() {
  is_inline_output_resource_ = false;
  clear_has_is_inline_output_resource();
}
 bool CachedResult::is_inline_output_resource() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.is_inline_output_resource)
  return is_inline_output_resource_;
}
 void CachedResult::set_is_inline_output_resource(bool value) {
  set_has_is_inline_output_resource();
  is_inline_output_resource_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.is_inline_output_resource)
}

// optional int32 optimized_image_type = 25;
bool CachedResult::has_optimized_image_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CachedResult::set_has_optimized_image_type() {
  _has_bits_[0] |= 0x00040000u;
}
void CachedResult::clear_has_optimized_image_type() {
  _has_bits_[0] &= ~0x00040000u;
}
void CachedResult::clear_optimized_image_type() {
  optimized_image_type_ = 0;
  clear_has_optimized_image_type();
}
 ::google::protobuf::int32 CachedResult::optimized_image_type() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.optimized_image_type)
  return optimized_image_type_;
}
 void CachedResult::set_optimized_image_type(::google::protobuf::int32 value) {
  set_has_optimized_image_type();
  optimized_image_type_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.CachedResult.optimized_image_type)
}

// repeated .net_instaweb.Dependency collected_dependency = 26;
int CachedResult::collected_dependency_size() const {
  return collected_dependency_.size();
}
void CachedResult::clear_collected_dependency() {
  collected_dependency_.Clear();
}
const ::net_instaweb::Dependency& CachedResult::collected_dependency(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Get(index);
}
::net_instaweb::Dependency* CachedResult::mutable_collected_dependency(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Mutable(index);
}
::net_instaweb::Dependency* CachedResult::add_collected_dependency() {
  // @@protoc_insertion_point(field_add:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >*
CachedResult::mutable_collected_dependency() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.CachedResult.collected_dependency)
  return &collected_dependency_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::Dependency >&
CachedResult::collected_dependency() const {
  // @@protoc_insertion_point(field_list:net_instaweb.CachedResult.collected_dependency)
  return collected_dependency_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OutputPartitions::kPartitionFieldNumber;
const int OutputPartitions::kOtherDependencyFieldNumber;
const int OutputPartitions::kDebugMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OutputPartitions::OutputPartitions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.OutputPartitions)
}

void OutputPartitions::InitAsDefaultInstance() {
}

OutputPartitions::OutputPartitions(const OutputPartitions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.OutputPartitions)
}

void OutputPartitions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OutputPartitions::~OutputPartitions() {
  // @@protoc_insertion_point(destructor:net_instaweb.OutputPartitions)
  SharedDtor();
}

void OutputPartitions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OutputPartitions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OutputPartitions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OutputPartitions_descriptor_;
}

const OutputPartitions& OutputPartitions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  return *default_instance_;
}

OutputPartitions* OutputPartitions::default_instance_ = NULL;

OutputPartitions* OutputPartitions::New(::google::protobuf::Arena* arena) const {
  OutputPartitions* n = new OutputPartitions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OutputPartitions::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.OutputPartitions)
  partition_.Clear();
  other_dependency_.Clear();
  debug_message_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OutputPartitions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.OutputPartitions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .net_instaweb.CachedResult partition = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_partition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_partition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_partition;
        if (input->ExpectTag(18)) goto parse_loop_other_dependency;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .net_instaweb.InputInfo other_dependency = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_other_dependency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_other_dependency()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_other_dependency;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_debug_message;
        break;
      }

      // repeated string debug_message = 3;
      case 3: {
        if (tag == 26) {
         parse_debug_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_debug_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->debug_message(this->debug_message_size() - 1).data(),
            this->debug_message(this->debug_message_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.OutputPartitions.debug_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_debug_message;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.OutputPartitions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.OutputPartitions)
  return false;
#undef DO_
}

void OutputPartitions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.OutputPartitions)
  // repeated .net_instaweb.CachedResult partition = 1;
  for (unsigned int i = 0, n = this->partition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->partition(i), output);
  }

  // repeated .net_instaweb.InputInfo other_dependency = 2;
  for (unsigned int i = 0, n = this->other_dependency_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_dependency(i), output);
  }

  // repeated string debug_message = 3;
  for (int i = 0; i < this->debug_message_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->debug_message(i).data(), this->debug_message(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.OutputPartitions.debug_message");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->debug_message(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.OutputPartitions)
}

::google::protobuf::uint8* OutputPartitions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.OutputPartitions)
  // repeated .net_instaweb.CachedResult partition = 1;
  for (unsigned int i = 0, n = this->partition_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->partition(i), false, target);
  }

  // repeated .net_instaweb.InputInfo other_dependency = 2;
  for (unsigned int i = 0, n = this->other_dependency_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->other_dependency(i), false, target);
  }

  // repeated string debug_message = 3;
  for (int i = 0; i < this->debug_message_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->debug_message(i).data(), this->debug_message(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.OutputPartitions.debug_message");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->debug_message(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.OutputPartitions)
  return target;
}

int OutputPartitions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.OutputPartitions)
  int total_size = 0;

  // repeated .net_instaweb.CachedResult partition = 1;
  total_size += 1 * this->partition_size();
  for (int i = 0; i < this->partition_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->partition(i));
  }

  // repeated .net_instaweb.InputInfo other_dependency = 2;
  total_size += 1 * this->other_dependency_size();
  for (int i = 0; i < this->other_dependency_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->other_dependency(i));
  }

  // repeated string debug_message = 3;
  total_size += 1 * this->debug_message_size();
  for (int i = 0; i < this->debug_message_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->debug_message(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OutputPartitions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.OutputPartitions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OutputPartitions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OutputPartitions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.OutputPartitions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.OutputPartitions)
    MergeFrom(*source);
  }
}

void OutputPartitions::MergeFrom(const OutputPartitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.OutputPartitions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  partition_.MergeFrom(from.partition_);
  other_dependency_.MergeFrom(from.other_dependency_);
  debug_message_.MergeFrom(from.debug_message_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OutputPartitions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.OutputPartitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputPartitions::CopyFrom(const OutputPartitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.OutputPartitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputPartitions::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->partition())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->other_dependency())) return false;
  return true;
}

void OutputPartitions::Swap(OutputPartitions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OutputPartitions::InternalSwap(OutputPartitions* other) {
  partition_.UnsafeArenaSwap(&other->partition_);
  other_dependency_.UnsafeArenaSwap(&other->other_dependency_);
  debug_message_.UnsafeArenaSwap(&other->debug_message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OutputPartitions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OutputPartitions_descriptor_;
  metadata.reflection = OutputPartitions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OutputPartitions

// repeated .net_instaweb.CachedResult partition = 1;
int OutputPartitions::partition_size() const {
  return partition_.size();
}
void OutputPartitions::clear_partition() {
  partition_.Clear();
}
const ::net_instaweb::CachedResult& OutputPartitions::partition(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.partition)
  return partition_.Get(index);
}
::net_instaweb::CachedResult* OutputPartitions::mutable_partition(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.partition)
  return partition_.Mutable(index);
}
::net_instaweb::CachedResult* OutputPartitions::add_partition() {
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.partition)
  return partition_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >*
OutputPartitions::mutable_partition() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.partition)
  return &partition_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::CachedResult >&
OutputPartitions::partition() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.partition)
  return partition_;
}

// repeated .net_instaweb.InputInfo other_dependency = 2;
int OutputPartitions::other_dependency_size() const {
  return other_dependency_.size();
}
void OutputPartitions::clear_other_dependency() {
  other_dependency_.Clear();
}
const ::net_instaweb::InputInfo& OutputPartitions::other_dependency(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Get(index);
}
::net_instaweb::InputInfo* OutputPartitions::mutable_other_dependency(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Mutable(index);
}
::net_instaweb::InputInfo* OutputPartitions::add_other_dependency() {
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >*
OutputPartitions::mutable_other_dependency() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.other_dependency)
  return &other_dependency_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::InputInfo >&
OutputPartitions::other_dependency() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.other_dependency)
  return other_dependency_;
}

// repeated string debug_message = 3;
int OutputPartitions::debug_message_size() const {
  return debug_message_.size();
}
void OutputPartitions::clear_debug_message() {
  debug_message_.Clear();
}
 const ::std::string& OutputPartitions::debug_message(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Get(index);
}
 ::std::string* OutputPartitions::mutable_debug_message(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Mutable(index);
}
 void OutputPartitions::set_debug_message(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:net_instaweb.OutputPartitions.debug_message)
  debug_message_.Mutable(index)->assign(value);
}
 void OutputPartitions::set_debug_message(int index, const char* value) {
  debug_message_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:net_instaweb.OutputPartitions.debug_message)
}
 void OutputPartitions::set_debug_message(int index, const char* value, size_t size) {
  debug_message_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.OutputPartitions.debug_message)
}
 ::std::string* OutputPartitions::add_debug_message() {
  // @@protoc_insertion_point(field_add_mutable:net_instaweb.OutputPartitions.debug_message)
  return debug_message_.Add();
}
 void OutputPartitions::add_debug_message(const ::std::string& value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:net_instaweb.OutputPartitions.debug_message)
}
 void OutputPartitions::add_debug_message(const char* value) {
  debug_message_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:net_instaweb.OutputPartitions.debug_message)
}
 void OutputPartitions::add_debug_message(const char* value, size_t size) {
  debug_message_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:net_instaweb.OutputPartitions.debug_message)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
OutputPartitions::debug_message() const {
  // @@protoc_insertion_point(field_list:net_instaweb.OutputPartitions.debug_message)
  return debug_message_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
OutputPartitions::mutable_debug_message() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.OutputPartitions.debug_message)
  return &debug_message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* ResourceContext_LibWebpLevel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceContext_LibWebpLevel_descriptor_;
}
bool ResourceContext_LibWebpLevel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ResourceContext_LibWebpLevel ResourceContext::LIBWEBP_NONE;
const ResourceContext_LibWebpLevel ResourceContext::LIBWEBP_LOSSY_ONLY;
const ResourceContext_LibWebpLevel ResourceContext::LIBWEBP_LOSSY_LOSSLESS_ALPHA;
const ResourceContext_LibWebpLevel ResourceContext::LIBWEBP_ANIMATED;
const ResourceContext_LibWebpLevel ResourceContext::LibWebpLevel_MIN;
const ResourceContext_LibWebpLevel ResourceContext::LibWebpLevel_MAX;
const int ResourceContext::LibWebpLevel_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceContext::kDesiredImageDimsFieldNumber;
const int ResourceContext::kInlineImagesFieldNumber;
const int ResourceContext::kMobileUserAgentFieldNumber;
const int ResourceContext::kLibwebpLevelFieldNumber;
const int ResourceContext::kMayUseSmallScreenQualityFieldNumber;
const int ResourceContext::kMayUseSaveDataQualityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceContext::ResourceContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ResourceContext)
}

void ResourceContext::InitAsDefaultInstance() {
  desired_image_dims_ = const_cast< ::net_instaweb::ImageDim*>(&::net_instaweb::ImageDim::default_instance());
}

ResourceContext::ResourceContext(const ResourceContext& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ResourceContext)
}

void ResourceContext::SharedCtor() {
  _cached_size_ = 0;
  desired_image_dims_ = NULL;
  inline_images_ = true;
  mobile_user_agent_ = false;
  libwebp_level_ = 0;
  may_use_small_screen_quality_ = false;
  may_use_save_data_quality_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResourceContext::~ResourceContext() {
  // @@protoc_insertion_point(destructor:net_instaweb.ResourceContext)
  SharedDtor();
}

void ResourceContext::SharedDtor() {
  if (this != default_instance_) {
    delete desired_image_dims_;
  }
}

void ResourceContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResourceContext::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResourceContext_descriptor_;
}

const ResourceContext& ResourceContext::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcached_5fresult_2eproto();
  return *default_instance_;
}

ResourceContext* ResourceContext::default_instance_ = NULL;

ResourceContext* ResourceContext::New(::google::protobuf::Arena* arena) const {
  ResourceContext* n = new ResourceContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResourceContext::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ResourceContext)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResourceContext, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResourceContext*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(mobile_user_agent_, may_use_save_data_quality_);
    if (has_desired_image_dims()) {
      if (desired_image_dims_ != NULL) desired_image_dims_->::net_instaweb::ImageDim::Clear();
    }
    inline_images_ = true;
    libwebp_level_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResourceContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ResourceContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .net_instaweb.ImageDim desired_image_dims = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_desired_image_dims()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_inline_images;
        break;
      }

      // optional bool inline_images = 3 [default = true];
      case 3: {
        if (tag == 24) {
         parse_inline_images:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inline_images_)));
          set_has_inline_images();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_mobile_user_agent;
        break;
      }

      // optional bool mobile_user_agent = 4;
      case 4: {
        if (tag == 32) {
         parse_mobile_user_agent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mobile_user_agent_)));
          set_has_mobile_user_agent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_libwebp_level;
        break;
      }

      // optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
      case 5: {
        if (tag == 40) {
         parse_libwebp_level:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::net_instaweb::ResourceContext_LibWebpLevel_IsValid(value)) {
            set_libwebp_level(static_cast< ::net_instaweb::ResourceContext_LibWebpLevel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_may_use_small_screen_quality;
        break;
      }

      // optional bool may_use_small_screen_quality = 7;
      case 7: {
        if (tag == 56) {
         parse_may_use_small_screen_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &may_use_small_screen_quality_)));
          set_has_may_use_small_screen_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_may_use_save_data_quality;
        break;
      }

      // optional bool may_use_save_data_quality = 8;
      case 8: {
        if (tag == 64) {
         parse_may_use_save_data_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &may_use_save_data_quality_)));
          set_has_may_use_save_data_quality();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ResourceContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ResourceContext)
  return false;
#undef DO_
}

void ResourceContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ResourceContext)
  // optional .net_instaweb.ImageDim desired_image_dims = 1;
  if (has_desired_image_dims()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->desired_image_dims_, output);
  }

  // optional bool inline_images = 3 [default = true];
  if (has_inline_images()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->inline_images(), output);
  }

  // optional bool mobile_user_agent = 4;
  if (has_mobile_user_agent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->mobile_user_agent(), output);
  }

  // optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
  if (has_libwebp_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->libwebp_level(), output);
  }

  // optional bool may_use_small_screen_quality = 7;
  if (has_may_use_small_screen_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->may_use_small_screen_quality(), output);
  }

  // optional bool may_use_save_data_quality = 8;
  if (has_may_use_save_data_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->may_use_save_data_quality(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.ResourceContext)
}

::google::protobuf::uint8* ResourceContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ResourceContext)
  // optional .net_instaweb.ImageDim desired_image_dims = 1;
  if (has_desired_image_dims()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->desired_image_dims_, false, target);
  }

  // optional bool inline_images = 3 [default = true];
  if (has_inline_images()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->inline_images(), target);
  }

  // optional bool mobile_user_agent = 4;
  if (has_mobile_user_agent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->mobile_user_agent(), target);
  }

  // optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
  if (has_libwebp_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->libwebp_level(), target);
  }

  // optional bool may_use_small_screen_quality = 7;
  if (has_may_use_small_screen_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->may_use_small_screen_quality(), target);
  }

  // optional bool may_use_save_data_quality = 8;
  if (has_may_use_save_data_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->may_use_save_data_quality(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ResourceContext)
  return target;
}

int ResourceContext::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ResourceContext)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional .net_instaweb.ImageDim desired_image_dims = 1;
    if (has_desired_image_dims()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->desired_image_dims_);
    }

    // optional bool inline_images = 3 [default = true];
    if (has_inline_images()) {
      total_size += 1 + 1;
    }

    // optional bool mobile_user_agent = 4;
    if (has_mobile_user_agent()) {
      total_size += 1 + 1;
    }

    // optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
    if (has_libwebp_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->libwebp_level());
    }

    // optional bool may_use_small_screen_quality = 7;
    if (has_may_use_small_screen_quality()) {
      total_size += 1 + 1;
    }

    // optional bool may_use_save_data_quality = 8;
    if (has_may_use_save_data_quality()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResourceContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ResourceContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResourceContext* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ResourceContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ResourceContext)
    MergeFrom(*source);
  }
}

void ResourceContext::MergeFrom(const ResourceContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ResourceContext)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_desired_image_dims()) {
      mutable_desired_image_dims()->::net_instaweb::ImageDim::MergeFrom(from.desired_image_dims());
    }
    if (from.has_inline_images()) {
      set_inline_images(from.inline_images());
    }
    if (from.has_mobile_user_agent()) {
      set_mobile_user_agent(from.mobile_user_agent());
    }
    if (from.has_libwebp_level()) {
      set_libwebp_level(from.libwebp_level());
    }
    if (from.has_may_use_small_screen_quality()) {
      set_may_use_small_screen_quality(from.may_use_small_screen_quality());
    }
    if (from.has_may_use_save_data_quality()) {
      set_may_use_save_data_quality(from.may_use_save_data_quality());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResourceContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ResourceContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceContext::CopyFrom(const ResourceContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ResourceContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceContext::IsInitialized() const {

  return true;
}

void ResourceContext::Swap(ResourceContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceContext::InternalSwap(ResourceContext* other) {
  std::swap(desired_image_dims_, other->desired_image_dims_);
  std::swap(inline_images_, other->inline_images_);
  std::swap(mobile_user_agent_, other->mobile_user_agent_);
  std::swap(libwebp_level_, other->libwebp_level_);
  std::swap(may_use_small_screen_quality_, other->may_use_small_screen_quality_);
  std::swap(may_use_save_data_quality_, other->may_use_save_data_quality_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResourceContext::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResourceContext_descriptor_;
  metadata.reflection = ResourceContext_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResourceContext

// optional .net_instaweb.ImageDim desired_image_dims = 1;
bool ResourceContext::has_desired_image_dims() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResourceContext::set_has_desired_image_dims() {
  _has_bits_[0] |= 0x00000001u;
}
void ResourceContext::clear_has_desired_image_dims() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResourceContext::clear_desired_image_dims() {
  if (desired_image_dims_ != NULL) desired_image_dims_->::net_instaweb::ImageDim::Clear();
  clear_has_desired_image_dims();
}
const ::net_instaweb::ImageDim& ResourceContext::desired_image_dims() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.desired_image_dims)
  return desired_image_dims_ != NULL ? *desired_image_dims_ : *default_instance_->desired_image_dims_;
}
::net_instaweb::ImageDim* ResourceContext::mutable_desired_image_dims() {
  set_has_desired_image_dims();
  if (desired_image_dims_ == NULL) {
    desired_image_dims_ = new ::net_instaweb::ImageDim;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.ResourceContext.desired_image_dims)
  return desired_image_dims_;
}
::net_instaweb::ImageDim* ResourceContext::release_desired_image_dims() {
  // @@protoc_insertion_point(field_release:net_instaweb.ResourceContext.desired_image_dims)
  clear_has_desired_image_dims();
  ::net_instaweb::ImageDim* temp = desired_image_dims_;
  desired_image_dims_ = NULL;
  return temp;
}
void ResourceContext::set_allocated_desired_image_dims(::net_instaweb::ImageDim* desired_image_dims) {
  delete desired_image_dims_;
  desired_image_dims_ = desired_image_dims;
  if (desired_image_dims) {
    set_has_desired_image_dims();
  } else {
    clear_has_desired_image_dims();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.ResourceContext.desired_image_dims)
}

// optional bool inline_images = 3 [default = true];
bool ResourceContext::has_inline_images() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResourceContext::set_has_inline_images() {
  _has_bits_[0] |= 0x00000002u;
}
void ResourceContext::clear_has_inline_images() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResourceContext::clear_inline_images() {
  inline_images_ = true;
  clear_has_inline_images();
}
 bool ResourceContext::inline_images() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.inline_images)
  return inline_images_;
}
 void ResourceContext::set_inline_images(bool value) {
  set_has_inline_images();
  inline_images_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.inline_images)
}

// optional bool mobile_user_agent = 4;
bool ResourceContext::has_mobile_user_agent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ResourceContext::set_has_mobile_user_agent() {
  _has_bits_[0] |= 0x00000004u;
}
void ResourceContext::clear_has_mobile_user_agent() {
  _has_bits_[0] &= ~0x00000004u;
}
void ResourceContext::clear_mobile_user_agent() {
  mobile_user_agent_ = false;
  clear_has_mobile_user_agent();
}
 bool ResourceContext::mobile_user_agent() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.mobile_user_agent)
  return mobile_user_agent_;
}
 void ResourceContext::set_mobile_user_agent(bool value) {
  set_has_mobile_user_agent();
  mobile_user_agent_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.mobile_user_agent)
}

// optional .net_instaweb.ResourceContext.LibWebpLevel libwebp_level = 5 [default = LIBWEBP_NONE];
bool ResourceContext::has_libwebp_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ResourceContext::set_has_libwebp_level() {
  _has_bits_[0] |= 0x00000008u;
}
void ResourceContext::clear_has_libwebp_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void ResourceContext::clear_libwebp_level() {
  libwebp_level_ = 0;
  clear_has_libwebp_level();
}
 ::net_instaweb::ResourceContext_LibWebpLevel ResourceContext::libwebp_level() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.libwebp_level)
  return static_cast< ::net_instaweb::ResourceContext_LibWebpLevel >(libwebp_level_);
}
 void ResourceContext::set_libwebp_level(::net_instaweb::ResourceContext_LibWebpLevel value) {
  assert(::net_instaweb::ResourceContext_LibWebpLevel_IsValid(value));
  set_has_libwebp_level();
  libwebp_level_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.libwebp_level)
}

// optional bool may_use_small_screen_quality = 7;
bool ResourceContext::has_may_use_small_screen_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ResourceContext::set_has_may_use_small_screen_quality() {
  _has_bits_[0] |= 0x00000010u;
}
void ResourceContext::clear_has_may_use_small_screen_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
void ResourceContext::clear_may_use_small_screen_quality() {
  may_use_small_screen_quality_ = false;
  clear_has_may_use_small_screen_quality();
}
 bool ResourceContext::may_use_small_screen_quality() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.may_use_small_screen_quality)
  return may_use_small_screen_quality_;
}
 void ResourceContext::set_may_use_small_screen_quality(bool value) {
  set_has_may_use_small_screen_quality();
  may_use_small_screen_quality_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.may_use_small_screen_quality)
}

// optional bool may_use_save_data_quality = 8;
bool ResourceContext::has_may_use_save_data_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ResourceContext::set_has_may_use_save_data_quality() {
  _has_bits_[0] |= 0x00000020u;
}
void ResourceContext::clear_has_may_use_save_data_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
void ResourceContext::clear_may_use_save_data_quality() {
  may_use_save_data_quality_ = false;
  clear_has_may_use_save_data_quality();
}
 bool ResourceContext::may_use_save_data_quality() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ResourceContext.may_use_save_data_quality)
  return may_use_save_data_quality_;
}
 void ResourceContext::set_may_use_save_data_quality(bool value) {
  set_has_may_use_save_data_quality();
  may_use_save_data_quality_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ResourceContext.may_use_save_data_quality)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
