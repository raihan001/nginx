// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pagespeed/kernel/base/proto_matcher_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pagespeed/kernel/base/proto_matcher_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

namespace {

const ::google::protobuf::Descriptor* ProtoMatcherTestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProtoMatcherTestMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() {
  protobuf_AddDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pagespeed/kernel/base/proto_matcher_test.proto");
  GOOGLE_CHECK(file != NULL);
  ProtoMatcherTestMessage_descriptor_ = file->message_type(0);
  static const int ProtoMatcherTestMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoMatcherTestMessage, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoMatcherTestMessage, b_),
  };
  ProtoMatcherTestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProtoMatcherTestMessage_descriptor_,
      ProtoMatcherTestMessage::default_instance_,
      ProtoMatcherTestMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoMatcherTestMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(ProtoMatcherTestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProtoMatcherTestMessage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProtoMatcherTestMessage_descriptor_, &ProtoMatcherTestMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() {
  delete ProtoMatcherTestMessage::default_instance_;
  delete ProtoMatcherTestMessage_reflection_;
}

void protobuf_AddDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.pagespeed/kernel/base/proto_matcher_te"
    "st.proto\022\014net_instaweb\"/\n\027ProtoMatcherTe"
    "stMessage\022\t\n\001a\030\001 \001(\005\022\t\n\001b\030\002 \001(\005", 111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pagespeed/kernel/base/proto_matcher_test.proto", &protobuf_RegisterTypes);
  ProtoMatcherTestMessage::default_instance_ = new ProtoMatcherTestMessage();
  ProtoMatcherTestMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto {
  StaticDescriptorInitializer_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto() {
    protobuf_AddDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto();
  }
} static_descriptor_initializer_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoMatcherTestMessage::kAFieldNumber;
const int ProtoMatcherTestMessage::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoMatcherTestMessage::ProtoMatcherTestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ProtoMatcherTestMessage)
}

void ProtoMatcherTestMessage::InitAsDefaultInstance() {
}

ProtoMatcherTestMessage::ProtoMatcherTestMessage(const ProtoMatcherTestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ProtoMatcherTestMessage)
}

void ProtoMatcherTestMessage::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0;
  b_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProtoMatcherTestMessage::~ProtoMatcherTestMessage() {
  // @@protoc_insertion_point(destructor:net_instaweb.ProtoMatcherTestMessage)
  SharedDtor();
}

void ProtoMatcherTestMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProtoMatcherTestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProtoMatcherTestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProtoMatcherTestMessage_descriptor_;
}

const ProtoMatcherTestMessage& ProtoMatcherTestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fkernel_2fbase_2fproto_5fmatcher_5ftest_2eproto();
  return *default_instance_;
}

ProtoMatcherTestMessage* ProtoMatcherTestMessage::default_instance_ = NULL;

ProtoMatcherTestMessage* ProtoMatcherTestMessage::New(::google::protobuf::Arena* arena) const {
  ProtoMatcherTestMessage* n = new ProtoMatcherTestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoMatcherTestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ProtoMatcherTestMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProtoMatcherTestMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProtoMatcherTestMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(a_, b_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProtoMatcherTestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ProtoMatcherTestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 a = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_b;
        break;
      }

      // optional int32 b = 2;
      case 2: {
        if (tag == 16) {
         parse_b:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
          set_has_b();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ProtoMatcherTestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ProtoMatcherTestMessage)
  return false;
#undef DO_
}

void ProtoMatcherTestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ProtoMatcherTestMessage)
  // optional int32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // optional int32 b = 2;
  if (has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.ProtoMatcherTestMessage)
}

::google::protobuf::uint8* ProtoMatcherTestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ProtoMatcherTestMessage)
  // optional int32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // optional int32 b = 2;
  if (has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ProtoMatcherTestMessage)
  return target;
}

int ProtoMatcherTestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ProtoMatcherTestMessage)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 b = 2;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoMatcherTestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ProtoMatcherTestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProtoMatcherTestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoMatcherTestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ProtoMatcherTestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ProtoMatcherTestMessage)
    MergeFrom(*source);
  }
}

void ProtoMatcherTestMessage::MergeFrom(const ProtoMatcherTestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ProtoMatcherTestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
    if (from.has_b()) {
      set_b(from.b());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ProtoMatcherTestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ProtoMatcherTestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoMatcherTestMessage::CopyFrom(const ProtoMatcherTestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ProtoMatcherTestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoMatcherTestMessage::IsInitialized() const {

  return true;
}

void ProtoMatcherTestMessage::Swap(ProtoMatcherTestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoMatcherTestMessage::InternalSwap(ProtoMatcherTestMessage* other) {
  std::swap(a_, other->a_);
  std::swap(b_, other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProtoMatcherTestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProtoMatcherTestMessage_descriptor_;
  metadata.reflection = ProtoMatcherTestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoMatcherTestMessage

// optional int32 a = 1;
bool ProtoMatcherTestMessage::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProtoMatcherTestMessage::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
void ProtoMatcherTestMessage::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProtoMatcherTestMessage::clear_a() {
  a_ = 0;
  clear_has_a();
}
 ::google::protobuf::int32 ProtoMatcherTestMessage::a() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ProtoMatcherTestMessage.a)
  return a_;
}
 void ProtoMatcherTestMessage::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ProtoMatcherTestMessage.a)
}

// optional int32 b = 2;
bool ProtoMatcherTestMessage::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProtoMatcherTestMessage::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
void ProtoMatcherTestMessage::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoMatcherTestMessage::clear_b() {
  b_ = 0;
  clear_has_b();
}
 ::google::protobuf::int32 ProtoMatcherTestMessage::b() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ProtoMatcherTestMessage.b)
  return b_;
}
 void ProtoMatcherTestMessage::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ProtoMatcherTestMessage.b)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
