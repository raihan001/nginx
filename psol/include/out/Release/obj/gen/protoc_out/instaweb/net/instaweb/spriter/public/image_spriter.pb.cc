// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/spriter/public/image_spriter.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/instaweb/spriter/public/image_spriter.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {
namespace spriter {

namespace {

const ::google::protobuf::Descriptor* Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Image_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpriteOptions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpriteOptions_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpriterInput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpriterInput_reflection_ = NULL;
const ::google::protobuf::Descriptor* Rect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Rect_reflection_ = NULL;
const ::google::protobuf::Descriptor* ImagePosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImagePosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpriterResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpriterResult_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PlacementMethod_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ImageFormat_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() {
  protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "net/instaweb/spriter/public/image_spriter.proto");
  GOOGLE_CHECK(file != NULL);
  Image_descriptor_ = file->message_type(0);
  static const int Image_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, path_),
  };
  Image_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Image_descriptor_,
      Image::default_instance_,
      Image_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _has_bits_[0]),
      -1,
      -1,
      sizeof(Image),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _internal_metadata_),
      -1);
  SpriteOptions_descriptor_ = file->message_type(1);
  static const int SpriteOptions_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, placement_method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, output_format_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, input_base_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, output_base_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, output_image_path_),
  };
  SpriteOptions_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpriteOptions_descriptor_,
      SpriteOptions::default_instance_,
      SpriteOptions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpriteOptions),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriteOptions, _internal_metadata_),
      -1);
  SpriterInput_descriptor_ = file->message_type(2);
  static const int SpriterInput_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterInput, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterInput, options_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterInput, input_image_set_),
  };
  SpriterInput_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpriterInput_descriptor_,
      SpriterInput::default_instance_,
      SpriterInput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterInput, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpriterInput),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterInput, _internal_metadata_),
      -1);
  Rect_descriptor_ = file->message_type(3);
  static const int Rect_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, x_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, y_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, height_),
  };
  Rect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Rect_descriptor_,
      Rect::default_instance_,
      Rect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, _has_bits_[0]),
      -1,
      -1,
      sizeof(Rect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Rect, _internal_metadata_),
      -1);
  ImagePosition_descriptor_ = file->message_type(4);
  static const int ImagePosition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePosition, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePosition, clip_rect_),
  };
  ImagePosition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ImagePosition_descriptor_,
      ImagePosition::default_instance_,
      ImagePosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePosition, _has_bits_[0]),
      -1,
      -1,
      sizeof(ImagePosition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImagePosition, _internal_metadata_),
      -1);
  SpriterResult_descriptor_ = file->message_type(5);
  static const int SpriterResult_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, output_base_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, output_image_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, image_position_),
  };
  SpriterResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpriterResult_descriptor_,
      SpriterResult::default_instance_,
      SpriterResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, _has_bits_[0]),
      -1,
      -1,
      sizeof(SpriterResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpriterResult, _internal_metadata_),
      -1);
  PlacementMethod_descriptor_ = file->enum_type(0);
  ImageFormat_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Image_descriptor_, &Image::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpriteOptions_descriptor_, &SpriteOptions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpriterInput_descriptor_, &SpriterInput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Rect_descriptor_, &Rect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ImagePosition_descriptor_, &ImagePosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpriterResult_descriptor_, &SpriterResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() {
  delete Image::default_instance_;
  delete Image_reflection_;
  delete SpriteOptions::default_instance_;
  delete SpriteOptions_reflection_;
  delete SpriterInput::default_instance_;
  delete SpriterInput_reflection_;
  delete Rect::default_instance_;
  delete Rect_reflection_;
  delete ImagePosition::default_instance_;
  delete ImagePosition_reflection_;
  delete SpriterResult::default_instance_;
  delete SpriterResult_reflection_;
}

void protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/net/instaweb/spriter/public/image_spri"
    "ter.proto\022\024net_instaweb.spriter\"\025\n\005Image"
    "\022\014\n\004path\030\001 \002(\t\"\330\001\n\rSpriteOptions\022\?\n\020plac"
    "ement_method\030\001 \002(\0162%.net_instaweb.sprite"
    "r.PlacementMethod\0228\n\routput_format\030\002 \002(\016"
    "2!.net_instaweb.spriter.ImageFormat\022\027\n\017i"
    "nput_base_path\030\003 \002(\t\022\030\n\020output_base_path"
    "\030\004 \002(\t\022\031\n\021output_image_path\030\005 \002(\t\"\211\001\n\014Sp"
    "riterInput\022\r\n\002id\030\001 \001(\005:\0010\0224\n\007options\030\002 \002"
    "(\0132#.net_instaweb.spriter.SpriteOptions\022"
    "4\n\017input_image_set\030\003 \003(\0132\033.net_instaweb."
    "spriter.Image\"C\n\004Rect\022\r\n\005x_pos\030\001 \002(\005\022\r\n\005"
    "y_pos\030\002 \002(\005\022\r\n\005width\030\003 \002(\005\022\016\n\006height\030\004 \002"
    "(\005\"L\n\rImagePosition\022\014\n\004path\030\001 \002(\t\022-\n\tcli"
    "p_rect\030\002 \002(\0132\032.net_instaweb.spriter.Rect"
    "\"\215\001\n\rSpriterResult\022\n\n\002id\030\001 \002(\005\022\030\n\020output"
    "_base_path\030\002 \002(\t\022\031\n\021output_image_path\030\003 "
    "\002(\t\022;\n\016image_position\030\004 \003(\0132#.net_instaw"
    "eb.spriter.ImagePosition*%\n\017PlacementMet"
    "hod\022\022\n\016VERTICAL_STRIP\020\000* \n\013ImageFormat\022\007"
    "\n\003PNG\020\000\022\010\n\004JPEG\020\001", 817);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "net/instaweb/spriter/public/image_spriter.proto", &protobuf_RegisterTypes);
  Image::default_instance_ = new Image();
  SpriteOptions::default_instance_ = new SpriteOptions();
  SpriterInput::default_instance_ = new SpriterInput();
  Rect::default_instance_ = new Rect();
  ImagePosition::default_instance_ = new ImagePosition();
  SpriterResult::default_instance_ = new SpriterResult();
  Image::default_instance_->InitAsDefaultInstance();
  SpriteOptions::default_instance_->InitAsDefaultInstance();
  SpriterInput::default_instance_->InitAsDefaultInstance();
  Rect::default_instance_->InitAsDefaultInstance();
  ImagePosition::default_instance_->InitAsDefaultInstance();
  SpriterResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto {
  StaticDescriptorInitializer_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto() {
    protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  }
} static_descriptor_initializer_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto_;
const ::google::protobuf::EnumDescriptor* PlacementMethod_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlacementMethod_descriptor_;
}
bool PlacementMethod_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ImageFormat_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageFormat_descriptor_;
}
bool ImageFormat_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.Image)
}

void Image::InitAsDefaultInstance() {
}

Image::Image(const Image& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.Image)
}

void Image::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Image_descriptor_;
}

const Image& Image::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

Image* Image::default_instance_ = NULL;

Image* Image::New(::google::protobuf::Arena* arena) const {
  Image* n = new Image;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.Image)
  if (has_path()) {
    path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.Image.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.Image)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.Image.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.Image)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.Image.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.Image)
  return target;
}

int Image::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.Image)
  int total_size = 0;

  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Image* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.Image)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  path_.Swap(&other->path_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Image_descriptor_;
  metadata.reflection = Image_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Image

// required string path = 1;
bool Image::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Image::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void Image::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void Image::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& Image::path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Image.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Image.path)
}
 void Image::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.Image.path)
}
 void Image::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.Image.path)
}
 ::std::string* Image::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.Image.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Image::release_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.Image.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.Image.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpriteOptions::kPlacementMethodFieldNumber;
const int SpriteOptions::kOutputFormatFieldNumber;
const int SpriteOptions::kInputBasePathFieldNumber;
const int SpriteOptions::kOutputBasePathFieldNumber;
const int SpriteOptions::kOutputImagePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpriteOptions::SpriteOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.SpriteOptions)
}

void SpriteOptions::InitAsDefaultInstance() {
}

SpriteOptions::SpriteOptions(const SpriteOptions& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.SpriteOptions)
}

void SpriteOptions::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  placement_method_ = 0;
  output_format_ = 0;
  input_base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_image_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpriteOptions::~SpriteOptions() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.SpriteOptions)
  SharedDtor();
}

void SpriteOptions::SharedDtor() {
  input_base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_image_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SpriteOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpriteOptions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpriteOptions_descriptor_;
}

const SpriteOptions& SpriteOptions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

SpriteOptions* SpriteOptions::default_instance_ = NULL;

SpriteOptions* SpriteOptions::New(::google::protobuf::Arena* arena) const {
  SpriteOptions* n = new SpriteOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpriteOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.SpriteOptions)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SpriteOptions, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SpriteOptions*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(placement_method_, output_format_);
    if (has_input_base_path()) {
      input_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_output_base_path()) {
      output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_output_image_path()) {
      output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpriteOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.SpriteOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::net_instaweb::spriter::PlacementMethod_IsValid(value)) {
            set_placement_method(static_cast< ::net_instaweb::spriter::PlacementMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_output_format;
        break;
      }

      // required .net_instaweb.spriter.ImageFormat output_format = 2;
      case 2: {
        if (tag == 16) {
         parse_output_format:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::net_instaweb::spriter::ImageFormat_IsValid(value)) {
            set_output_format(static_cast< ::net_instaweb::spriter::ImageFormat >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_input_base_path;
        break;
      }

      // required string input_base_path = 3;
      case 3: {
        if (tag == 26) {
         parse_input_base_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_input_base_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input_base_path().data(), this->input_base_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.SpriteOptions.input_base_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_output_base_path;
        break;
      }

      // required string output_base_path = 4;
      case 4: {
        if (tag == 34) {
         parse_output_base_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_base_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_base_path().data(), this->output_base_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.SpriteOptions.output_base_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_output_image_path;
        break;
      }

      // required string output_image_path = 5;
      case 5: {
        if (tag == 42) {
         parse_output_image_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_image_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_image_path().data(), this->output_image_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.SpriteOptions.output_image_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.SpriteOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.SpriteOptions)
  return false;
#undef DO_
}

void SpriteOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.SpriteOptions)
  // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
  if (has_placement_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->placement_method(), output);
  }

  // required .net_instaweb.spriter.ImageFormat output_format = 2;
  if (has_output_format()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->output_format(), output);
  }

  // required string input_base_path = 3;
  if (has_input_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_base_path().data(), this->input_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.input_base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->input_base_path(), output);
  }

  // required string output_base_path = 4;
  if (has_output_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_base_path().data(), this->output_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.output_base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_base_path(), output);
  }

  // required string output_image_path = 5;
  if (has_output_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_image_path().data(), this->output_image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.output_image_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->output_image_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.SpriteOptions)
}

::google::protobuf::uint8* SpriteOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.SpriteOptions)
  // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
  if (has_placement_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->placement_method(), target);
  }

  // required .net_instaweb.spriter.ImageFormat output_format = 2;
  if (has_output_format()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->output_format(), target);
  }

  // required string input_base_path = 3;
  if (has_input_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input_base_path().data(), this->input_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.input_base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->input_base_path(), target);
  }

  // required string output_base_path = 4;
  if (has_output_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_base_path().data(), this->output_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.output_base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_base_path(), target);
  }

  // required string output_image_path = 5;
  if (has_output_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_image_path().data(), this->output_image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriteOptions.output_image_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->output_image_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.SpriteOptions)
  return target;
}

int SpriteOptions::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:net_instaweb.spriter.SpriteOptions)
  int total_size = 0;

  if (has_placement_method()) {
    // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->placement_method());
  }

  if (has_output_format()) {
    // required .net_instaweb.spriter.ImageFormat output_format = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_format());
  }

  if (has_input_base_path()) {
    // required string input_base_path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_base_path());
  }

  if (has_output_base_path()) {
    // required string output_base_path = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_base_path());
  }

  if (has_output_image_path()) {
    // required string output_image_path = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_image_path());
  }

  return total_size;
}
int SpriteOptions::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.SpriteOptions)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .net_instaweb.spriter.PlacementMethod placement_method = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->placement_method());

    // required .net_instaweb.spriter.ImageFormat output_format = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output_format());

    // required string input_base_path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->input_base_path());

    // required string output_base_path = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_base_path());

    // required string output_image_path = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_image_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpriteOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.SpriteOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SpriteOptions* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SpriteOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.SpriteOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.SpriteOptions)
    MergeFrom(*source);
  }
}

void SpriteOptions::MergeFrom(const SpriteOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.SpriteOptions)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_placement_method()) {
      set_placement_method(from.placement_method());
    }
    if (from.has_output_format()) {
      set_output_format(from.output_format());
    }
    if (from.has_input_base_path()) {
      set_has_input_base_path();
      input_base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_base_path_);
    }
    if (from.has_output_base_path()) {
      set_has_output_base_path();
      output_base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_base_path_);
    }
    if (from.has_output_image_path()) {
      set_has_output_image_path();
      output_image_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_image_path_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpriteOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.SpriteOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpriteOptions::CopyFrom(const SpriteOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.SpriteOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpriteOptions::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void SpriteOptions::Swap(SpriteOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpriteOptions::InternalSwap(SpriteOptions* other) {
  std::swap(placement_method_, other->placement_method_);
  std::swap(output_format_, other->output_format_);
  input_base_path_.Swap(&other->input_base_path_);
  output_base_path_.Swap(&other->output_base_path_);
  output_image_path_.Swap(&other->output_image_path_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpriteOptions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpriteOptions_descriptor_;
  metadata.reflection = SpriteOptions_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpriteOptions

// required .net_instaweb.spriter.PlacementMethod placement_method = 1;
bool SpriteOptions::has_placement_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpriteOptions::set_has_placement_method() {
  _has_bits_[0] |= 0x00000001u;
}
void SpriteOptions::clear_has_placement_method() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpriteOptions::clear_placement_method() {
  placement_method_ = 0;
  clear_has_placement_method();
}
 ::net_instaweb::spriter::PlacementMethod SpriteOptions::placement_method() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.placement_method)
  return static_cast< ::net_instaweb::spriter::PlacementMethod >(placement_method_);
}
 void SpriteOptions::set_placement_method(::net_instaweb::spriter::PlacementMethod value) {
  assert(::net_instaweb::spriter::PlacementMethod_IsValid(value));
  set_has_placement_method();
  placement_method_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.placement_method)
}

// required .net_instaweb.spriter.ImageFormat output_format = 2;
bool SpriteOptions::has_output_format() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SpriteOptions::set_has_output_format() {
  _has_bits_[0] |= 0x00000002u;
}
void SpriteOptions::clear_has_output_format() {
  _has_bits_[0] &= ~0x00000002u;
}
void SpriteOptions::clear_output_format() {
  output_format_ = 0;
  clear_has_output_format();
}
 ::net_instaweb::spriter::ImageFormat SpriteOptions::output_format() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_format)
  return static_cast< ::net_instaweb::spriter::ImageFormat >(output_format_);
}
 void SpriteOptions::set_output_format(::net_instaweb::spriter::ImageFormat value) {
  assert(::net_instaweb::spriter::ImageFormat_IsValid(value));
  set_has_output_format();
  output_format_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_format)
}

// required string input_base_path = 3;
bool SpriteOptions::has_input_base_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SpriteOptions::set_has_input_base_path() {
  _has_bits_[0] |= 0x00000004u;
}
void SpriteOptions::clear_has_input_base_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void SpriteOptions::clear_input_base_path() {
  input_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_base_path();
}
 const ::std::string& SpriteOptions::input_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.input_base_path)
  return input_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_input_base_path(const ::std::string& value) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.input_base_path)
}
 void SpriteOptions::set_input_base_path(const char* value) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.input_base_path)
}
 void SpriteOptions::set_input_base_path(const char* value, size_t size) {
  set_has_input_base_path();
  input_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.input_base_path)
}
 ::std::string* SpriteOptions::mutable_input_base_path() {
  set_has_input_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.input_base_path)
  return input_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpriteOptions::release_input_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.input_base_path)
  clear_has_input_base_path();
  return input_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_allocated_input_base_path(::std::string* input_base_path) {
  if (input_base_path != NULL) {
    set_has_input_base_path();
  } else {
    clear_has_input_base_path();
  }
  input_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.input_base_path)
}

// required string output_base_path = 4;
bool SpriteOptions::has_output_base_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SpriteOptions::set_has_output_base_path() {
  _has_bits_[0] |= 0x00000008u;
}
void SpriteOptions::clear_has_output_base_path() {
  _has_bits_[0] &= ~0x00000008u;
}
void SpriteOptions::clear_output_base_path() {
  output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_base_path();
}
 const ::std::string& SpriteOptions::output_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_base_path)
  return output_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_output_base_path(const ::std::string& value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_base_path)
}
 void SpriteOptions::set_output_base_path(const char* value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.output_base_path)
}
 void SpriteOptions::set_output_base_path(const char* value, size_t size) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.output_base_path)
}
 ::std::string* SpriteOptions::mutable_output_base_path() {
  set_has_output_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.output_base_path)
  return output_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpriteOptions::release_output_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.output_base_path)
  clear_has_output_base_path();
  return output_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_allocated_output_base_path(::std::string* output_base_path) {
  if (output_base_path != NULL) {
    set_has_output_base_path();
  } else {
    clear_has_output_base_path();
  }
  output_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.output_base_path)
}

// required string output_image_path = 5;
bool SpriteOptions::has_output_image_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SpriteOptions::set_has_output_image_path() {
  _has_bits_[0] |= 0x00000010u;
}
void SpriteOptions::clear_has_output_image_path() {
  _has_bits_[0] &= ~0x00000010u;
}
void SpriteOptions::clear_output_image_path() {
  output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_image_path();
}
 const ::std::string& SpriteOptions::output_image_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriteOptions.output_image_path)
  return output_image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_output_image_path(const ::std::string& value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriteOptions.output_image_path)
}
 void SpriteOptions::set_output_image_path(const char* value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriteOptions.output_image_path)
}
 void SpriteOptions::set_output_image_path(const char* value, size_t size) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriteOptions.output_image_path)
}
 ::std::string* SpriteOptions::mutable_output_image_path() {
  set_has_output_image_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriteOptions.output_image_path)
  return output_image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpriteOptions::release_output_image_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriteOptions.output_image_path)
  clear_has_output_image_path();
  return output_image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriteOptions::set_allocated_output_image_path(::std::string* output_image_path) {
  if (output_image_path != NULL) {
    set_has_output_image_path();
  } else {
    clear_has_output_image_path();
  }
  output_image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_image_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriteOptions.output_image_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpriterInput::kIdFieldNumber;
const int SpriterInput::kOptionsFieldNumber;
const int SpriterInput::kInputImageSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpriterInput::SpriterInput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.SpriterInput)
}

void SpriterInput::InitAsDefaultInstance() {
  options_ = const_cast< ::net_instaweb::spriter::SpriteOptions*>(&::net_instaweb::spriter::SpriteOptions::default_instance());
}

SpriterInput::SpriterInput(const SpriterInput& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.SpriterInput)
}

void SpriterInput::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  options_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpriterInput::~SpriterInput() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.SpriterInput)
  SharedDtor();
}

void SpriterInput::SharedDtor() {
  if (this != default_instance_) {
    delete options_;
  }
}

void SpriterInput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpriterInput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpriterInput_descriptor_;
}

const SpriterInput& SpriterInput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

SpriterInput* SpriterInput::default_instance_ = NULL;

SpriterInput* SpriterInput::New(::google::protobuf::Arena* arena) const {
  SpriterInput* n = new SpriterInput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpriterInput::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.SpriterInput)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0;
    if (has_options()) {
      if (options_ != NULL) options_->::net_instaweb::spriter::SpriteOptions::Clear();
    }
  }
  input_image_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpriterInput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.SpriterInput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_options;
        break;
      }

      // required .net_instaweb.spriter.SpriteOptions options = 2;
      case 2: {
        if (tag == 18) {
         parse_options:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_input_image_set;
        break;
      }

      // repeated .net_instaweb.spriter.Image input_image_set = 3;
      case 3: {
        if (tag == 26) {
         parse_input_image_set:
          DO_(input->IncrementRecursionDepth());
         parse_loop_input_image_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_image_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_input_image_set;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.SpriterInput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.SpriterInput)
  return false;
#undef DO_
}

void SpriterInput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.SpriterInput)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .net_instaweb.spriter.SpriteOptions options = 2;
  if (has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->options_, output);
  }

  // repeated .net_instaweb.spriter.Image input_image_set = 3;
  for (unsigned int i = 0, n = this->input_image_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->input_image_set(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.SpriterInput)
}

::google::protobuf::uint8* SpriterInput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.SpriterInput)
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .net_instaweb.spriter.SpriteOptions options = 2;
  if (has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->options_, false, target);
  }

  // repeated .net_instaweb.spriter.Image input_image_set = 3;
  for (unsigned int i = 0, n = this->input_image_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->input_image_set(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.SpriterInput)
  return target;
}

int SpriterInput::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.SpriterInput)
  int total_size = 0;

  // required .net_instaweb.spriter.SpriteOptions options = 2;
  if (has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->options_);
  }
  // optional int32 id = 1 [default = 0];
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // repeated .net_instaweb.spriter.Image input_image_set = 3;
  total_size += 1 * this->input_image_set_size();
  for (int i = 0; i < this->input_image_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->input_image_set(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpriterInput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.SpriterInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SpriterInput* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SpriterInput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.SpriterInput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.SpriterInput)
    MergeFrom(*source);
  }
}

void SpriterInput::MergeFrom(const SpriterInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.SpriterInput)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  input_image_set_.MergeFrom(from.input_image_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_options()) {
      mutable_options()->::net_instaweb::spriter::SpriteOptions::MergeFrom(from.options());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpriterInput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.SpriterInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpriterInput::CopyFrom(const SpriterInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.SpriterInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpriterInput::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_options()) {
    if (!this->options_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->input_image_set())) return false;
  return true;
}

void SpriterInput::Swap(SpriterInput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpriterInput::InternalSwap(SpriterInput* other) {
  std::swap(id_, other->id_);
  std::swap(options_, other->options_);
  input_image_set_.UnsafeArenaSwap(&other->input_image_set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpriterInput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpriterInput_descriptor_;
  metadata.reflection = SpriterInput_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpriterInput

// optional int32 id = 1 [default = 0];
bool SpriterInput::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpriterInput::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SpriterInput::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpriterInput::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 SpriterInput::id() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.id)
  return id_;
}
 void SpriterInput::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterInput.id)
}

// required .net_instaweb.spriter.SpriteOptions options = 2;
bool SpriterInput::has_options() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SpriterInput::set_has_options() {
  _has_bits_[0] |= 0x00000002u;
}
void SpriterInput::clear_has_options() {
  _has_bits_[0] &= ~0x00000002u;
}
void SpriterInput::clear_options() {
  if (options_ != NULL) options_->::net_instaweb::spriter::SpriteOptions::Clear();
  clear_has_options();
}
const ::net_instaweb::spriter::SpriteOptions& SpriterInput::options() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.options)
  return options_ != NULL ? *options_ : *default_instance_->options_;
}
::net_instaweb::spriter::SpriteOptions* SpriterInput::mutable_options() {
  set_has_options();
  if (options_ == NULL) {
    options_ = new ::net_instaweb::spriter::SpriteOptions;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterInput.options)
  return options_;
}
::net_instaweb::spriter::SpriteOptions* SpriterInput::release_options() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterInput.options)
  clear_has_options();
  ::net_instaweb::spriter::SpriteOptions* temp = options_;
  options_ = NULL;
  return temp;
}
void SpriterInput::set_allocated_options(::net_instaweb::spriter::SpriteOptions* options) {
  delete options_;
  options_ = options;
  if (options) {
    set_has_options();
  } else {
    clear_has_options();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterInput.options)
}

// repeated .net_instaweb.spriter.Image input_image_set = 3;
int SpriterInput::input_image_set_size() const {
  return input_image_set_.size();
}
void SpriterInput::clear_input_image_set() {
  input_image_set_.Clear();
}
const ::net_instaweb::spriter::Image& SpriterInput::input_image_set(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Get(index);
}
::net_instaweb::spriter::Image* SpriterInput::mutable_input_image_set(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Mutable(index);
}
::net_instaweb::spriter::Image* SpriterInput::add_input_image_set() {
  // @@protoc_insertion_point(field_add:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >*
SpriterInput::mutable_input_image_set() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.spriter.SpriterInput.input_image_set)
  return &input_image_set_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::Image >&
SpriterInput::input_image_set() const {
  // @@protoc_insertion_point(field_list:net_instaweb.spriter.SpriterInput.input_image_set)
  return input_image_set_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rect::kXPosFieldNumber;
const int Rect::kYPosFieldNumber;
const int Rect::kWidthFieldNumber;
const int Rect::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rect::Rect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.Rect)
}

void Rect::InitAsDefaultInstance() {
}

Rect::Rect(const Rect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.Rect)
}

void Rect::SharedCtor() {
  _cached_size_ = 0;
  x_pos_ = 0;
  y_pos_ = 0;
  width_ = 0;
  height_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Rect::~Rect() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.Rect)
  SharedDtor();
}

void Rect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Rect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rect_descriptor_;
}

const Rect& Rect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

Rect* Rect::default_instance_ = NULL;

Rect* Rect::New(::google::protobuf::Arena* arena) const {
  Rect* n = new Rect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rect::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.Rect)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Rect, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Rect*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_pos_, height_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Rect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.Rect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x_pos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_pos_)));
          set_has_x_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y_pos;
        break;
      }

      // required int32 y_pos = 2;
      case 2: {
        if (tag == 16) {
         parse_y_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_pos_)));
          set_has_y_pos();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_width;
        break;
      }

      // required int32 width = 3;
      case 3: {
        if (tag == 24) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_height;
        break;
      }

      // required int32 height = 4;
      case 4: {
        if (tag == 32) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.Rect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.Rect)
  return false;
#undef DO_
}

void Rect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.Rect)
  // required int32 x_pos = 1;
  if (has_x_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x_pos(), output);
  }

  // required int32 y_pos = 2;
  if (has_y_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y_pos(), output);
  }

  // required int32 width = 3;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // required int32 height = 4;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.Rect)
}

::google::protobuf::uint8* Rect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.Rect)
  // required int32 x_pos = 1;
  if (has_x_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x_pos(), target);
  }

  // required int32 y_pos = 2;
  if (has_y_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y_pos(), target);
  }

  // required int32 width = 3;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // required int32 height = 4;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.Rect)
  return target;
}

int Rect::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:net_instaweb.spriter.Rect)
  int total_size = 0;

  if (has_x_pos()) {
    // required int32 x_pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_pos());
  }

  if (has_y_pos()) {
    // required int32 y_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_pos());
  }

  if (has_width()) {
    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  if (has_height()) {
    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  return total_size;
}
int Rect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.Rect)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 x_pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_pos());

    // required int32 y_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_pos());

    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.Rect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Rect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Rect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.Rect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.Rect)
    MergeFrom(*source);
  }
}

void Rect::MergeFrom(const Rect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.Rect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x_pos()) {
      set_x_pos(from.x_pos());
    }
    if (from.has_y_pos()) {
      set_y_pos(from.y_pos());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Rect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rect::CopyFrom(const Rect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.Rect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rect::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Rect::Swap(Rect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rect::InternalSwap(Rect* other) {
  std::swap(x_pos_, other->x_pos_);
  std::swap(y_pos_, other->y_pos_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Rect_descriptor_;
  metadata.reflection = Rect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Rect

// required int32 x_pos = 1;
bool Rect::has_x_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Rect::set_has_x_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void Rect::clear_has_x_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void Rect::clear_x_pos() {
  x_pos_ = 0;
  clear_has_x_pos();
}
 ::google::protobuf::int32 Rect::x_pos() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.x_pos)
  return x_pos_;
}
 void Rect::set_x_pos(::google::protobuf::int32 value) {
  set_has_x_pos();
  x_pos_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.x_pos)
}

// required int32 y_pos = 2;
bool Rect::has_y_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Rect::set_has_y_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void Rect::clear_has_y_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void Rect::clear_y_pos() {
  y_pos_ = 0;
  clear_has_y_pos();
}
 ::google::protobuf::int32 Rect::y_pos() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.y_pos)
  return y_pos_;
}
 void Rect::set_y_pos(::google::protobuf::int32 value) {
  set_has_y_pos();
  y_pos_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.y_pos)
}

// required int32 width = 3;
bool Rect::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Rect::set_has_width() {
  _has_bits_[0] |= 0x00000004u;
}
void Rect::clear_has_width() {
  _has_bits_[0] &= ~0x00000004u;
}
void Rect::clear_width() {
  width_ = 0;
  clear_has_width();
}
 ::google::protobuf::int32 Rect::width() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.width)
  return width_;
}
 void Rect::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.width)
}

// required int32 height = 4;
bool Rect::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Rect::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
void Rect::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
void Rect::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 Rect::height() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.Rect.height)
  return height_;
}
 void Rect::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.Rect.height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImagePosition::kPathFieldNumber;
const int ImagePosition::kClipRectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImagePosition::ImagePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.ImagePosition)
}

void ImagePosition::InitAsDefaultInstance() {
  clip_rect_ = const_cast< ::net_instaweb::spriter::Rect*>(&::net_instaweb::spriter::Rect::default_instance());
}

ImagePosition::ImagePosition(const ImagePosition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.ImagePosition)
}

void ImagePosition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clip_rect_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImagePosition::~ImagePosition() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.ImagePosition)
  SharedDtor();
}

void ImagePosition::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete clip_rect_;
  }
}

void ImagePosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImagePosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImagePosition_descriptor_;
}

const ImagePosition& ImagePosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

ImagePosition* ImagePosition::default_instance_ = NULL;

ImagePosition* ImagePosition::New(::google::protobuf::Arena* arena) const {
  ImagePosition* n = new ImagePosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImagePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.ImagePosition)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_path()) {
      path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_clip_rect()) {
      if (clip_rect_ != NULL) clip_rect_->::net_instaweb::spriter::Rect::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ImagePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.ImagePosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.ImagePosition.path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_clip_rect;
        break;
      }

      // required .net_instaweb.spriter.Rect clip_rect = 2;
      case 2: {
        if (tag == 18) {
         parse_clip_rect:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clip_rect()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.ImagePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.ImagePosition)
  return false;
#undef DO_
}

void ImagePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.ImagePosition)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.ImagePosition.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // required .net_instaweb.spriter.Rect clip_rect = 2;
  if (has_clip_rect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->clip_rect_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.ImagePosition)
}

::google::protobuf::uint8* ImagePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.ImagePosition)
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.ImagePosition.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required .net_instaweb.spriter.Rect clip_rect = 2;
  if (has_clip_rect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->clip_rect_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.ImagePosition)
  return target;
}

int ImagePosition::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:net_instaweb.spriter.ImagePosition)
  int total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_clip_rect()) {
    // required .net_instaweb.spriter.Rect clip_rect = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clip_rect_);
  }

  return total_size;
}
int ImagePosition::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.ImagePosition)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .net_instaweb.spriter.Rect clip_rect = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clip_rect_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImagePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.ImagePosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ImagePosition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ImagePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.ImagePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.ImagePosition)
    MergeFrom(*source);
  }
}

void ImagePosition::MergeFrom(const ImagePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.ImagePosition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (from.has_clip_rect()) {
      mutable_clip_rect()->::net_instaweb::spriter::Rect::MergeFrom(from.clip_rect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ImagePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.ImagePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImagePosition::CopyFrom(const ImagePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.ImagePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImagePosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_clip_rect()) {
    if (!this->clip_rect_->IsInitialized()) return false;
  }
  return true;
}

void ImagePosition::Swap(ImagePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImagePosition::InternalSwap(ImagePosition* other) {
  path_.Swap(&other->path_);
  std::swap(clip_rect_, other->clip_rect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImagePosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImagePosition_descriptor_;
  metadata.reflection = ImagePosition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImagePosition

// required string path = 1;
bool ImagePosition::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImagePosition::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
void ImagePosition::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImagePosition::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
 const ::std::string& ImagePosition::path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.ImagePosition.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ImagePosition::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.ImagePosition.path)
}
 void ImagePosition::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.ImagePosition.path)
}
 void ImagePosition::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.ImagePosition.path)
}
 ::std::string* ImagePosition::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.ImagePosition.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ImagePosition::release_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.ImagePosition.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ImagePosition::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.ImagePosition.path)
}

// required .net_instaweb.spriter.Rect clip_rect = 2;
bool ImagePosition::has_clip_rect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ImagePosition::set_has_clip_rect() {
  _has_bits_[0] |= 0x00000002u;
}
void ImagePosition::clear_has_clip_rect() {
  _has_bits_[0] &= ~0x00000002u;
}
void ImagePosition::clear_clip_rect() {
  if (clip_rect_ != NULL) clip_rect_->::net_instaweb::spriter::Rect::Clear();
  clear_has_clip_rect();
}
const ::net_instaweb::spriter::Rect& ImagePosition::clip_rect() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.ImagePosition.clip_rect)
  return clip_rect_ != NULL ? *clip_rect_ : *default_instance_->clip_rect_;
}
::net_instaweb::spriter::Rect* ImagePosition::mutable_clip_rect() {
  set_has_clip_rect();
  if (clip_rect_ == NULL) {
    clip_rect_ = new ::net_instaweb::spriter::Rect;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.ImagePosition.clip_rect)
  return clip_rect_;
}
::net_instaweb::spriter::Rect* ImagePosition::release_clip_rect() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.ImagePosition.clip_rect)
  clear_has_clip_rect();
  ::net_instaweb::spriter::Rect* temp = clip_rect_;
  clip_rect_ = NULL;
  return temp;
}
void ImagePosition::set_allocated_clip_rect(::net_instaweb::spriter::Rect* clip_rect) {
  delete clip_rect_;
  clip_rect_ = clip_rect;
  if (clip_rect) {
    set_has_clip_rect();
  } else {
    clear_has_clip_rect();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.ImagePosition.clip_rect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpriterResult::kIdFieldNumber;
const int SpriterResult::kOutputBasePathFieldNumber;
const int SpriterResult::kOutputImagePathFieldNumber;
const int SpriterResult::kImagePositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpriterResult::SpriterResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.spriter.SpriterResult)
}

void SpriterResult::InitAsDefaultInstance() {
}

SpriterResult::SpriterResult(const SpriterResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.spriter.SpriterResult)
}

void SpriterResult::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  output_base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_image_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SpriterResult::~SpriterResult() {
  // @@protoc_insertion_point(destructor:net_instaweb.spriter.SpriterResult)
  SharedDtor();
}

void SpriterResult::SharedDtor() {
  output_base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_image_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SpriterResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpriterResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpriterResult_descriptor_;
}

const SpriterResult& SpriterResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2fspriter_2fpublic_2fimage_5fspriter_2eproto();
  return *default_instance_;
}

SpriterResult* SpriterResult::default_instance_ = NULL;

SpriterResult* SpriterResult::New(::google::protobuf::Arena* arena) const {
  SpriterResult* n = new SpriterResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpriterResult::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.spriter.SpriterResult)
  if (_has_bits_[0 / 32] & 7u) {
    id_ = 0;
    if (has_output_base_path()) {
      output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_output_image_path()) {
      output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  image_position_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpriterResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.spriter.SpriterResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_output_base_path;
        break;
      }

      // required string output_base_path = 2;
      case 2: {
        if (tag == 18) {
         parse_output_base_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_base_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_base_path().data(), this->output_base_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.SpriterResult.output_base_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_output_image_path;
        break;
      }

      // required string output_image_path = 3;
      case 3: {
        if (tag == 26) {
         parse_output_image_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_image_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_image_path().data(), this->output_image_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "net_instaweb.spriter.SpriterResult.output_image_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_image_position;
        break;
      }

      // repeated .net_instaweb.spriter.ImagePosition image_position = 4;
      case 4: {
        if (tag == 34) {
         parse_image_position:
          DO_(input->IncrementRecursionDepth());
         parse_loop_image_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_image_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_image_position;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.spriter.SpriterResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.spriter.SpriterResult)
  return false;
#undef DO_
}

void SpriterResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.spriter.SpriterResult)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required string output_base_path = 2;
  if (has_output_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_base_path().data(), this->output_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriterResult.output_base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->output_base_path(), output);
  }

  // required string output_image_path = 3;
  if (has_output_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_image_path().data(), this->output_image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriterResult.output_image_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->output_image_path(), output);
  }

  // repeated .net_instaweb.spriter.ImagePosition image_position = 4;
  for (unsigned int i = 0, n = this->image_position_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->image_position(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:net_instaweb.spriter.SpriterResult)
}

::google::protobuf::uint8* SpriterResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.spriter.SpriterResult)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required string output_base_path = 2;
  if (has_output_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_base_path().data(), this->output_base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriterResult.output_base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->output_base_path(), target);
  }

  // required string output_image_path = 3;
  if (has_output_image_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_image_path().data(), this->output_image_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "net_instaweb.spriter.SpriterResult.output_image_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->output_image_path(), target);
  }

  // repeated .net_instaweb.spriter.ImagePosition image_position = 4;
  for (unsigned int i = 0, n = this->image_position_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->image_position(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.spriter.SpriterResult)
  return target;
}

int SpriterResult::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:net_instaweb.spriter.SpriterResult)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_output_base_path()) {
    // required string output_base_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_base_path());
  }

  if (has_output_image_path()) {
    // required string output_image_path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_image_path());
  }

  return total_size;
}
int SpriterResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.spriter.SpriterResult)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required string output_base_path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_base_path());

    // required string output_image_path = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->output_image_path());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .net_instaweb.spriter.ImagePosition image_position = 4;
  total_size += 1 * this->image_position_size();
  for (int i = 0; i < this->image_position_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->image_position(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpriterResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.spriter.SpriterResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SpriterResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SpriterResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.spriter.SpriterResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.spriter.SpriterResult)
    MergeFrom(*source);
  }
}

void SpriterResult::MergeFrom(const SpriterResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.spriter.SpriterResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  image_position_.MergeFrom(from.image_position_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_output_base_path()) {
      set_has_output_base_path();
      output_base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_base_path_);
    }
    if (from.has_output_image_path()) {
      set_has_output_image_path();
      output_image_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_image_path_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SpriterResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.spriter.SpriterResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpriterResult::CopyFrom(const SpriterResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.spriter.SpriterResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpriterResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->image_position())) return false;
  return true;
}

void SpriterResult::Swap(SpriterResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpriterResult::InternalSwap(SpriterResult* other) {
  std::swap(id_, other->id_);
  output_base_path_.Swap(&other->output_base_path_);
  output_image_path_.Swap(&other->output_image_path_);
  image_position_.UnsafeArenaSwap(&other->image_position_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpriterResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpriterResult_descriptor_;
  metadata.reflection = SpriterResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpriterResult

// required int32 id = 1;
bool SpriterResult::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpriterResult::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SpriterResult::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpriterResult::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 SpriterResult::id() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.id)
  return id_;
}
 void SpriterResult::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.id)
}

// required string output_base_path = 2;
bool SpriterResult::has_output_base_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SpriterResult::set_has_output_base_path() {
  _has_bits_[0] |= 0x00000002u;
}
void SpriterResult::clear_has_output_base_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void SpriterResult::clear_output_base_path() {
  output_base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_base_path();
}
 const ::std::string& SpriterResult::output_base_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.output_base_path)
  return output_base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriterResult::set_output_base_path(const ::std::string& value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.output_base_path)
}
 void SpriterResult::set_output_base_path(const char* value) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriterResult.output_base_path)
}
 void SpriterResult::set_output_base_path(const char* value, size_t size) {
  set_has_output_base_path();
  output_base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriterResult.output_base_path)
}
 ::std::string* SpriterResult::mutable_output_base_path() {
  set_has_output_base_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.output_base_path)
  return output_base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpriterResult::release_output_base_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterResult.output_base_path)
  clear_has_output_base_path();
  return output_base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriterResult::set_allocated_output_base_path(::std::string* output_base_path) {
  if (output_base_path != NULL) {
    set_has_output_base_path();
  } else {
    clear_has_output_base_path();
  }
  output_base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_base_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterResult.output_base_path)
}

// required string output_image_path = 3;
bool SpriterResult::has_output_image_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SpriterResult::set_has_output_image_path() {
  _has_bits_[0] |= 0x00000004u;
}
void SpriterResult::clear_has_output_image_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void SpriterResult::clear_output_image_path() {
  output_image_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_image_path();
}
 const ::std::string& SpriterResult::output_image_path() const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.output_image_path)
  return output_image_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriterResult::set_output_image_path(const ::std::string& value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.spriter.SpriterResult.output_image_path)
}
 void SpriterResult::set_output_image_path(const char* value) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.spriter.SpriterResult.output_image_path)
}
 void SpriterResult::set_output_image_path(const char* value, size_t size) {
  set_has_output_image_path();
  output_image_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.spriter.SpriterResult.output_image_path)
}
 ::std::string* SpriterResult::mutable_output_image_path() {
  set_has_output_image_path();
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.output_image_path)
  return output_image_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SpriterResult::release_output_image_path() {
  // @@protoc_insertion_point(field_release:net_instaweb.spriter.SpriterResult.output_image_path)
  clear_has_output_image_path();
  return output_image_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SpriterResult::set_allocated_output_image_path(::std::string* output_image_path) {
  if (output_image_path != NULL) {
    set_has_output_image_path();
  } else {
    clear_has_output_image_path();
  }
  output_image_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_image_path);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.spriter.SpriterResult.output_image_path)
}

// repeated .net_instaweb.spriter.ImagePosition image_position = 4;
int SpriterResult::image_position_size() const {
  return image_position_.size();
}
void SpriterResult::clear_image_position() {
  image_position_.Clear();
}
const ::net_instaweb::spriter::ImagePosition& SpriterResult::image_position(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Get(index);
}
::net_instaweb::spriter::ImagePosition* SpriterResult::mutable_image_position(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Mutable(index);
}
::net_instaweb::spriter::ImagePosition* SpriterResult::add_image_position() {
  // @@protoc_insertion_point(field_add:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >*
SpriterResult::mutable_image_position() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.spriter.SpriterResult.image_position)
  return &image_position_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::spriter::ImagePosition >&
SpriterResult::image_position() const {
  // @@protoc_insertion_point(field_list:net_instaweb.spriter.SpriterResult.image_position)
  return image_position_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace spriter
}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
