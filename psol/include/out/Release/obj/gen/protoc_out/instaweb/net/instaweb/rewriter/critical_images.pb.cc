// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/critical_images.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "net/instaweb/rewriter/critical_images.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto() {
  delete CriticalImages::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::net_instaweb::protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fkeys_2eproto();
  CriticalImages::default_instance_ = new CriticalImages();
  CriticalImages::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto_once_);
void protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto_once_,
                 &protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto {
  StaticDescriptorInitializer_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto() {
    protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto();
  }
} static_descriptor_initializer_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto_;
#endif

// ===================================================================

static ::std::string* MutableUnknownFieldsForCriticalImages(
    CriticalImages* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CriticalImages::kHtmlCriticalImageSupportFieldNumber;
const int CriticalImages::kCssCriticalImageSupportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CriticalImages::CriticalImages()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.CriticalImages)
}

void CriticalImages::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  html_critical_image_support_ = const_cast< ::net_instaweb::CriticalKeys*>(
      ::net_instaweb::CriticalKeys::internal_default_instance());
#else
  html_critical_image_support_ = const_cast< ::net_instaweb::CriticalKeys*>(&::net_instaweb::CriticalKeys::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  css_critical_image_support_ = const_cast< ::net_instaweb::CriticalKeys*>(
      ::net_instaweb::CriticalKeys::internal_default_instance());
#else
  css_critical_image_support_ = const_cast< ::net_instaweb::CriticalKeys*>(&::net_instaweb::CriticalKeys::default_instance());
#endif
}

CriticalImages::CriticalImages(const CriticalImages& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.CriticalImages)
}

void CriticalImages::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_critical_image_support_ = NULL;
  css_critical_image_support_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CriticalImages::~CriticalImages() {
  // @@protoc_insertion_point(destructor:net_instaweb.CriticalImages)
  SharedDtor();
}

void CriticalImages::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete html_critical_image_support_;
    delete css_critical_image_support_;
  }
}

void CriticalImages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CriticalImages& CriticalImages::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fimages_2eproto();
#endif
  return *default_instance_;
}

CriticalImages* CriticalImages::default_instance_ = NULL;

CriticalImages* CriticalImages::New(::google::protobuf::Arena* arena) const {
  CriticalImages* n = new CriticalImages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CriticalImages::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.CriticalImages)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_html_critical_image_support()) {
      if (html_critical_image_support_ != NULL) html_critical_image_support_->::net_instaweb::CriticalKeys::Clear();
    }
    if (has_css_critical_image_support()) {
      if (css_critical_image_support_ != NULL) css_critical_image_support_->::net_instaweb::CriticalKeys::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CriticalImages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForCriticalImages, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:net_instaweb.CriticalImages)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .net_instaweb.CriticalKeys html_critical_image_support = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_html_critical_image_support()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_css_critical_image_support;
        break;
      }

      // optional .net_instaweb.CriticalKeys css_critical_image_support = 6;
      case 6: {
        if (tag == 50) {
         parse_css_critical_image_support:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_css_critical_image_support()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.CriticalImages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.CriticalImages)
  return false;
#undef DO_
}

void CriticalImages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.CriticalImages)
  // optional .net_instaweb.CriticalKeys html_critical_image_support = 5;
  if (has_html_critical_image_support()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, *this->html_critical_image_support_, output);
  }

  // optional .net_instaweb.CriticalKeys css_critical_image_support = 6;
  if (has_css_critical_image_support()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, *this->css_critical_image_support_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:net_instaweb.CriticalImages)
}

int CriticalImages::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.CriticalImages)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .net_instaweb.CriticalKeys html_critical_image_support = 5;
    if (has_html_critical_image_support()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->html_critical_image_support_);
    }

    // optional .net_instaweb.CriticalKeys css_critical_image_support = 6;
    if (has_css_critical_image_support()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->css_critical_image_support_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CriticalImages::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CriticalImages*>(&from));
}

void CriticalImages::MergeFrom(const CriticalImages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.CriticalImages)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_html_critical_image_support()) {
      mutable_html_critical_image_support()->::net_instaweb::CriticalKeys::MergeFrom(from.html_critical_image_support());
    }
    if (from.has_css_critical_image_support()) {
      mutable_css_critical_image_support()->::net_instaweb::CriticalKeys::MergeFrom(from.css_critical_image_support());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void CriticalImages::CopyFrom(const CriticalImages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.CriticalImages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalImages::IsInitialized() const {

  return true;
}

void CriticalImages::Swap(CriticalImages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CriticalImages::InternalSwap(CriticalImages* other) {
  std::swap(html_critical_image_support_, other->html_critical_image_support_);
  std::swap(css_critical_image_support_, other->css_critical_image_support_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CriticalImages::GetTypeName() const {
  return "net_instaweb.CriticalImages";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CriticalImages

// optional .net_instaweb.CriticalKeys html_critical_image_support = 5;
bool CriticalImages::has_html_critical_image_support() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CriticalImages::set_has_html_critical_image_support() {
  _has_bits_[0] |= 0x00000001u;
}
void CriticalImages::clear_has_html_critical_image_support() {
  _has_bits_[0] &= ~0x00000001u;
}
void CriticalImages::clear_html_critical_image_support() {
  if (html_critical_image_support_ != NULL) html_critical_image_support_->::net_instaweb::CriticalKeys::Clear();
  clear_has_html_critical_image_support();
}
const ::net_instaweb::CriticalKeys& CriticalImages::html_critical_image_support() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CriticalImages.html_critical_image_support)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return html_critical_image_support_ != NULL ? *html_critical_image_support_ : *default_instance().html_critical_image_support_;
#else
  return html_critical_image_support_ != NULL ? *html_critical_image_support_ : *default_instance_->html_critical_image_support_;
#endif
}
::net_instaweb::CriticalKeys* CriticalImages::mutable_html_critical_image_support() {
  set_has_html_critical_image_support();
  if (html_critical_image_support_ == NULL) {
    html_critical_image_support_ = new ::net_instaweb::CriticalKeys;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CriticalImages.html_critical_image_support)
  return html_critical_image_support_;
}
::net_instaweb::CriticalKeys* CriticalImages::release_html_critical_image_support() {
  // @@protoc_insertion_point(field_release:net_instaweb.CriticalImages.html_critical_image_support)
  clear_has_html_critical_image_support();
  ::net_instaweb::CriticalKeys* temp = html_critical_image_support_;
  html_critical_image_support_ = NULL;
  return temp;
}
void CriticalImages::set_allocated_html_critical_image_support(::net_instaweb::CriticalKeys* html_critical_image_support) {
  delete html_critical_image_support_;
  html_critical_image_support_ = html_critical_image_support;
  if (html_critical_image_support) {
    set_has_html_critical_image_support();
  } else {
    clear_has_html_critical_image_support();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CriticalImages.html_critical_image_support)
}

// optional .net_instaweb.CriticalKeys css_critical_image_support = 6;
bool CriticalImages::has_css_critical_image_support() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CriticalImages::set_has_css_critical_image_support() {
  _has_bits_[0] |= 0x00000002u;
}
void CriticalImages::clear_has_css_critical_image_support() {
  _has_bits_[0] &= ~0x00000002u;
}
void CriticalImages::clear_css_critical_image_support() {
  if (css_critical_image_support_ != NULL) css_critical_image_support_->::net_instaweb::CriticalKeys::Clear();
  clear_has_css_critical_image_support();
}
const ::net_instaweb::CriticalKeys& CriticalImages::css_critical_image_support() const {
  // @@protoc_insertion_point(field_get:net_instaweb.CriticalImages.css_critical_image_support)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return css_critical_image_support_ != NULL ? *css_critical_image_support_ : *default_instance().css_critical_image_support_;
#else
  return css_critical_image_support_ != NULL ? *css_critical_image_support_ : *default_instance_->css_critical_image_support_;
#endif
}
::net_instaweb::CriticalKeys* CriticalImages::mutable_css_critical_image_support() {
  set_has_css_critical_image_support();
  if (css_critical_image_support_ == NULL) {
    css_critical_image_support_ = new ::net_instaweb::CriticalKeys;
  }
  // @@protoc_insertion_point(field_mutable:net_instaweb.CriticalImages.css_critical_image_support)
  return css_critical_image_support_;
}
::net_instaweb::CriticalKeys* CriticalImages::release_css_critical_image_support() {
  // @@protoc_insertion_point(field_release:net_instaweb.CriticalImages.css_critical_image_support)
  clear_has_css_critical_image_support();
  ::net_instaweb::CriticalKeys* temp = css_critical_image_support_;
  css_critical_image_support_ = NULL;
  return temp;
}
void CriticalImages::set_allocated_css_critical_image_support(::net_instaweb::CriticalKeys* css_critical_image_support) {
  delete css_critical_image_support_;
  css_critical_image_support_ = css_critical_image_support;
  if (css_critical_image_support) {
    set_has_css_critical_image_support();
  } else {
    clear_has_css_critical_image_support();
  }
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.CriticalImages.css_critical_image_support)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
