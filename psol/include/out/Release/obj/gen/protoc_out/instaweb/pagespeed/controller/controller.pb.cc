// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pagespeed/controller/controller.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pagespeed/controller/controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

namespace {

const ::google::protobuf::Descriptor* ScheduleRewriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScheduleRewriteRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ScheduleRewriteRequest_RewriteStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ScheduleRewriteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScheduleRewriteResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScheduleExpensiveOperationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScheduleExpensiveOperationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScheduleExpensiveOperationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScheduleExpensiveOperationResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto() {
  protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pagespeed/controller/controller.proto");
  GOOGLE_CHECK(file != NULL);
  ScheduleRewriteRequest_descriptor_ = file->message_type(0);
  static const int ScheduleRewriteRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteRequest, status_),
  };
  ScheduleRewriteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScheduleRewriteRequest_descriptor_,
      ScheduleRewriteRequest::default_instance_,
      ScheduleRewriteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScheduleRewriteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteRequest, _is_default_instance_));
  ScheduleRewriteRequest_RewriteStatus_descriptor_ = ScheduleRewriteRequest_descriptor_->enum_type(0);
  ScheduleRewriteResponse_descriptor_ = file->message_type(1);
  static const int ScheduleRewriteResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteResponse, ok_to_proceed_),
  };
  ScheduleRewriteResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScheduleRewriteResponse_descriptor_,
      ScheduleRewriteResponse::default_instance_,
      ScheduleRewriteResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScheduleRewriteResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleRewriteResponse, _is_default_instance_));
  ScheduleExpensiveOperationRequest_descriptor_ = file->message_type(2);
  static const int ScheduleExpensiveOperationRequest_offsets_[1] = {
  };
  ScheduleExpensiveOperationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScheduleExpensiveOperationRequest_descriptor_,
      ScheduleExpensiveOperationRequest::default_instance_,
      ScheduleExpensiveOperationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScheduleExpensiveOperationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleExpensiveOperationRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleExpensiveOperationRequest, _is_default_instance_));
  ScheduleExpensiveOperationResponse_descriptor_ = file->message_type(3);
  static const int ScheduleExpensiveOperationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleExpensiveOperationResponse, ok_to_proceed_),
  };
  ScheduleExpensiveOperationResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ScheduleExpensiveOperationResponse_descriptor_,
      ScheduleExpensiveOperationResponse::default_instance_,
      ScheduleExpensiveOperationResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ScheduleExpensiveOperationResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleExpensiveOperationResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScheduleExpensiveOperationResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pagespeed_2fcontroller_2fcontroller_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScheduleRewriteRequest_descriptor_, &ScheduleRewriteRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScheduleRewriteResponse_descriptor_, &ScheduleRewriteResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScheduleExpensiveOperationRequest_descriptor_, &ScheduleExpensiveOperationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ScheduleExpensiveOperationResponse_descriptor_, &ScheduleExpensiveOperationResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto() {
  delete ScheduleRewriteRequest::default_instance_;
  delete ScheduleRewriteRequest_reflection_;
  delete ScheduleRewriteResponse::default_instance_;
  delete ScheduleRewriteResponse_reflection_;
  delete ScheduleExpensiveOperationRequest::default_instance_;
  delete ScheduleExpensiveOperationRequest_reflection_;
  delete ScheduleExpensiveOperationResponse::default_instance_;
  delete ScheduleExpensiveOperationResponse_reflection_;
}

void protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n%pagespeed/controller/controller.proto\022"
    "\014net_instaweb\"\240\001\n\026ScheduleRewriteRequest"
    "\022\013\n\003key\030\001 \001(\t\022B\n\006status\030\002 \001(\01622.net_inst"
    "aweb.ScheduleRewriteRequest.RewriteStatu"
    "s\"5\n\rRewriteStatus\022\013\n\007PENDING\020\000\022\013\n\007SUCCE"
    "SS\020\001\022\n\n\006FAILED\020\002\"0\n\027ScheduleRewriteRespo"
    "nse\022\025\n\rok_to_proceed\030\001 \001(\010\"#\n!ScheduleEx"
    "pensiveOperationRequest\";\n\"ScheduleExpen"
    "siveOperationResponse\022\025\n\rok_to_proceed\030\001"
    " \001(\0102\213\002\n\033CentralControllerRpcService\022d\n\017"
    "ScheduleRewrite\022$.net_instaweb.ScheduleR"
    "ewriteRequest\032%.net_instaweb.ScheduleRew"
    "riteResponse\"\000(\0010\001\022\205\001\n\032ScheduleExpensive"
    "Operation\022/.net_instaweb.ScheduleExpensi"
    "veOperationRequest\0320.net_instaweb.Schedu"
    "leExpensiveOperationResponse\"\000(\0010\001B\003\200\001\000b"
    "\006proto3", 647);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pagespeed/controller/controller.proto", &protobuf_RegisterTypes);
  ScheduleRewriteRequest::default_instance_ = new ScheduleRewriteRequest();
  ScheduleRewriteResponse::default_instance_ = new ScheduleRewriteResponse();
  ScheduleExpensiveOperationRequest::default_instance_ = new ScheduleExpensiveOperationRequest();
  ScheduleExpensiveOperationResponse::default_instance_ = new ScheduleExpensiveOperationResponse();
  ScheduleRewriteRequest::default_instance_->InitAsDefaultInstance();
  ScheduleRewriteResponse::default_instance_->InitAsDefaultInstance();
  ScheduleExpensiveOperationRequest::default_instance_->InitAsDefaultInstance();
  ScheduleExpensiveOperationResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pagespeed_2fcontroller_2fcontroller_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pagespeed_2fcontroller_2fcontroller_2eproto {
  StaticDescriptorInitializer_pagespeed_2fcontroller_2fcontroller_2eproto() {
    protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  }
} static_descriptor_initializer_pagespeed_2fcontroller_2fcontroller_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* ScheduleRewriteRequest_RewriteStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScheduleRewriteRequest_RewriteStatus_descriptor_;
}
bool ScheduleRewriteRequest_RewriteStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::PENDING;
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::SUCCESS;
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::FAILED;
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::RewriteStatus_MIN;
const ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::RewriteStatus_MAX;
const int ScheduleRewriteRequest::RewriteStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleRewriteRequest::kKeyFieldNumber;
const int ScheduleRewriteRequest::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleRewriteRequest::ScheduleRewriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ScheduleRewriteRequest)
}

void ScheduleRewriteRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScheduleRewriteRequest::ScheduleRewriteRequest(const ScheduleRewriteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ScheduleRewriteRequest)
}

void ScheduleRewriteRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

ScheduleRewriteRequest::~ScheduleRewriteRequest() {
  // @@protoc_insertion_point(destructor:net_instaweb.ScheduleRewriteRequest)
  SharedDtor();
}

void ScheduleRewriteRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ScheduleRewriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleRewriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScheduleRewriteRequest_descriptor_;
}

const ScheduleRewriteRequest& ScheduleRewriteRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  return *default_instance_;
}

ScheduleRewriteRequest* ScheduleRewriteRequest::default_instance_ = NULL;

ScheduleRewriteRequest* ScheduleRewriteRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleRewriteRequest* n = new ScheduleRewriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleRewriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ScheduleRewriteRequest)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

bool ScheduleRewriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ScheduleRewriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "net_instaweb.ScheduleRewriteRequest.key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::net_instaweb::ScheduleRewriteRequest_RewriteStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ScheduleRewriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ScheduleRewriteRequest)
  return false;
#undef DO_
}

void ScheduleRewriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ScheduleRewriteRequest)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "net_instaweb.ScheduleRewriteRequest.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:net_instaweb.ScheduleRewriteRequest)
}

::google::protobuf::uint8* ScheduleRewriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ScheduleRewriteRequest)
  // optional string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "net_instaweb.ScheduleRewriteRequest.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ScheduleRewriteRequest)
  return target;
}

int ScheduleRewriteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ScheduleRewriteRequest)
  int total_size = 0;

  // optional string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleRewriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ScheduleRewriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScheduleRewriteRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleRewriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ScheduleRewriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ScheduleRewriteRequest)
    MergeFrom(*source);
  }
}

void ScheduleRewriteRequest::MergeFrom(const ScheduleRewriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ScheduleRewriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ScheduleRewriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ScheduleRewriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleRewriteRequest::CopyFrom(const ScheduleRewriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ScheduleRewriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleRewriteRequest::IsInitialized() const {

  return true;
}

void ScheduleRewriteRequest::Swap(ScheduleRewriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleRewriteRequest::InternalSwap(ScheduleRewriteRequest* other) {
  key_.Swap(&other->key_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleRewriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScheduleRewriteRequest_descriptor_;
  metadata.reflection = ScheduleRewriteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleRewriteRequest

// optional string key = 1;
void ScheduleRewriteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ScheduleRewriteRequest::key() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteRequest.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScheduleRewriteRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteRequest.key)
}
 void ScheduleRewriteRequest::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.ScheduleRewriteRequest.key)
}
 void ScheduleRewriteRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.ScheduleRewriteRequest.key)
}
 ::std::string* ScheduleRewriteRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:net_instaweb.ScheduleRewriteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ScheduleRewriteRequest::release_key() {
  // @@protoc_insertion_point(field_release:net_instaweb.ScheduleRewriteRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ScheduleRewriteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.ScheduleRewriteRequest.key)
}

// optional .net_instaweb.ScheduleRewriteRequest.RewriteStatus status = 2;
void ScheduleRewriteRequest::clear_status() {
  status_ = 0;
}
 ::net_instaweb::ScheduleRewriteRequest_RewriteStatus ScheduleRewriteRequest::status() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteRequest.status)
  return static_cast< ::net_instaweb::ScheduleRewriteRequest_RewriteStatus >(status_);
}
 void ScheduleRewriteRequest::set_status(::net_instaweb::ScheduleRewriteRequest_RewriteStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteRequest.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleRewriteResponse::kOkToProceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleRewriteResponse::ScheduleRewriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ScheduleRewriteResponse)
}

void ScheduleRewriteResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScheduleRewriteResponse::ScheduleRewriteResponse(const ScheduleRewriteResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ScheduleRewriteResponse)
}

void ScheduleRewriteResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ok_to_proceed_ = false;
}

ScheduleRewriteResponse::~ScheduleRewriteResponse() {
  // @@protoc_insertion_point(destructor:net_instaweb.ScheduleRewriteResponse)
  SharedDtor();
}

void ScheduleRewriteResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScheduleRewriteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleRewriteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScheduleRewriteResponse_descriptor_;
}

const ScheduleRewriteResponse& ScheduleRewriteResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  return *default_instance_;
}

ScheduleRewriteResponse* ScheduleRewriteResponse::default_instance_ = NULL;

ScheduleRewriteResponse* ScheduleRewriteResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleRewriteResponse* n = new ScheduleRewriteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleRewriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ScheduleRewriteResponse)
  ok_to_proceed_ = false;
}

bool ScheduleRewriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ScheduleRewriteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ok_to_proceed = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_to_proceed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ScheduleRewriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ScheduleRewriteResponse)
  return false;
#undef DO_
}

void ScheduleRewriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ScheduleRewriteResponse)
  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ok_to_proceed(), output);
  }

  // @@protoc_insertion_point(serialize_end:net_instaweb.ScheduleRewriteResponse)
}

::google::protobuf::uint8* ScheduleRewriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ScheduleRewriteResponse)
  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ok_to_proceed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ScheduleRewriteResponse)
  return target;
}

int ScheduleRewriteResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ScheduleRewriteResponse)
  int total_size = 0;

  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleRewriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ScheduleRewriteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScheduleRewriteResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleRewriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ScheduleRewriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ScheduleRewriteResponse)
    MergeFrom(*source);
  }
}

void ScheduleRewriteResponse::MergeFrom(const ScheduleRewriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ScheduleRewriteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ok_to_proceed() != 0) {
    set_ok_to_proceed(from.ok_to_proceed());
  }
}

void ScheduleRewriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ScheduleRewriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleRewriteResponse::CopyFrom(const ScheduleRewriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ScheduleRewriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleRewriteResponse::IsInitialized() const {

  return true;
}

void ScheduleRewriteResponse::Swap(ScheduleRewriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleRewriteResponse::InternalSwap(ScheduleRewriteResponse* other) {
  std::swap(ok_to_proceed_, other->ok_to_proceed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleRewriteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScheduleRewriteResponse_descriptor_;
  metadata.reflection = ScheduleRewriteResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleRewriteResponse

// optional bool ok_to_proceed = 1;
void ScheduleRewriteResponse::clear_ok_to_proceed() {
  ok_to_proceed_ = false;
}
 bool ScheduleRewriteResponse::ok_to_proceed() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleRewriteResponse.ok_to_proceed)
  return ok_to_proceed_;
}
 void ScheduleRewriteResponse::set_ok_to_proceed(bool value) {
  
  ok_to_proceed_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleRewriteResponse.ok_to_proceed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleExpensiveOperationRequest::ScheduleExpensiveOperationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ScheduleExpensiveOperationRequest)
}

void ScheduleExpensiveOperationRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScheduleExpensiveOperationRequest::ScheduleExpensiveOperationRequest(const ScheduleExpensiveOperationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ScheduleExpensiveOperationRequest)
}

void ScheduleExpensiveOperationRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ScheduleExpensiveOperationRequest::~ScheduleExpensiveOperationRequest() {
  // @@protoc_insertion_point(destructor:net_instaweb.ScheduleExpensiveOperationRequest)
  SharedDtor();
}

void ScheduleExpensiveOperationRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScheduleExpensiveOperationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleExpensiveOperationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScheduleExpensiveOperationRequest_descriptor_;
}

const ScheduleExpensiveOperationRequest& ScheduleExpensiveOperationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  return *default_instance_;
}

ScheduleExpensiveOperationRequest* ScheduleExpensiveOperationRequest::default_instance_ = NULL;

ScheduleExpensiveOperationRequest* ScheduleExpensiveOperationRequest::New(::google::protobuf::Arena* arena) const {
  ScheduleExpensiveOperationRequest* n = new ScheduleExpensiveOperationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleExpensiveOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ScheduleExpensiveOperationRequest)
}

bool ScheduleExpensiveOperationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ScheduleExpensiveOperationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ScheduleExpensiveOperationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ScheduleExpensiveOperationRequest)
  return false;
#undef DO_
}

void ScheduleExpensiveOperationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ScheduleExpensiveOperationRequest)
  // @@protoc_insertion_point(serialize_end:net_instaweb.ScheduleExpensiveOperationRequest)
}

::google::protobuf::uint8* ScheduleExpensiveOperationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ScheduleExpensiveOperationRequest)
  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ScheduleExpensiveOperationRequest)
  return target;
}

int ScheduleExpensiveOperationRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ScheduleExpensiveOperationRequest)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleExpensiveOperationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ScheduleExpensiveOperationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScheduleExpensiveOperationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleExpensiveOperationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ScheduleExpensiveOperationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ScheduleExpensiveOperationRequest)
    MergeFrom(*source);
  }
}

void ScheduleExpensiveOperationRequest::MergeFrom(const ScheduleExpensiveOperationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ScheduleExpensiveOperationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void ScheduleExpensiveOperationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ScheduleExpensiveOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleExpensiveOperationRequest::CopyFrom(const ScheduleExpensiveOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ScheduleExpensiveOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleExpensiveOperationRequest::IsInitialized() const {

  return true;
}

void ScheduleExpensiveOperationRequest::Swap(ScheduleExpensiveOperationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleExpensiveOperationRequest::InternalSwap(ScheduleExpensiveOperationRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleExpensiveOperationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScheduleExpensiveOperationRequest_descriptor_;
  metadata.reflection = ScheduleExpensiveOperationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleExpensiveOperationRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScheduleExpensiveOperationResponse::kOkToProceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScheduleExpensiveOperationResponse::ScheduleExpensiveOperationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.ScheduleExpensiveOperationResponse)
}

void ScheduleExpensiveOperationResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ScheduleExpensiveOperationResponse::ScheduleExpensiveOperationResponse(const ScheduleExpensiveOperationResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.ScheduleExpensiveOperationResponse)
}

void ScheduleExpensiveOperationResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  ok_to_proceed_ = false;
}

ScheduleExpensiveOperationResponse::~ScheduleExpensiveOperationResponse() {
  // @@protoc_insertion_point(destructor:net_instaweb.ScheduleExpensiveOperationResponse)
  SharedDtor();
}

void ScheduleExpensiveOperationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScheduleExpensiveOperationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScheduleExpensiveOperationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScheduleExpensiveOperationResponse_descriptor_;
}

const ScheduleExpensiveOperationResponse& ScheduleExpensiveOperationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fcontroller_2fcontroller_2eproto();
  return *default_instance_;
}

ScheduleExpensiveOperationResponse* ScheduleExpensiveOperationResponse::default_instance_ = NULL;

ScheduleExpensiveOperationResponse* ScheduleExpensiveOperationResponse::New(::google::protobuf::Arena* arena) const {
  ScheduleExpensiveOperationResponse* n = new ScheduleExpensiveOperationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScheduleExpensiveOperationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.ScheduleExpensiveOperationResponse)
  ok_to_proceed_ = false;
}

bool ScheduleExpensiveOperationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:net_instaweb.ScheduleExpensiveOperationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ok_to_proceed = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ok_to_proceed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.ScheduleExpensiveOperationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.ScheduleExpensiveOperationResponse)
  return false;
#undef DO_
}

void ScheduleExpensiveOperationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.ScheduleExpensiveOperationResponse)
  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ok_to_proceed(), output);
  }

  // @@protoc_insertion_point(serialize_end:net_instaweb.ScheduleExpensiveOperationResponse)
}

::google::protobuf::uint8* ScheduleExpensiveOperationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:net_instaweb.ScheduleExpensiveOperationResponse)
  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ok_to_proceed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:net_instaweb.ScheduleExpensiveOperationResponse)
  return target;
}

int ScheduleExpensiveOperationResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.ScheduleExpensiveOperationResponse)
  int total_size = 0;

  // optional bool ok_to_proceed = 1;
  if (this->ok_to_proceed() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScheduleExpensiveOperationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:net_instaweb.ScheduleExpensiveOperationResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ScheduleExpensiveOperationResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ScheduleExpensiveOperationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:net_instaweb.ScheduleExpensiveOperationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:net_instaweb.ScheduleExpensiveOperationResponse)
    MergeFrom(*source);
  }
}

void ScheduleExpensiveOperationResponse::MergeFrom(const ScheduleExpensiveOperationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.ScheduleExpensiveOperationResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ok_to_proceed() != 0) {
    set_ok_to_proceed(from.ok_to_proceed());
  }
}

void ScheduleExpensiveOperationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:net_instaweb.ScheduleExpensiveOperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScheduleExpensiveOperationResponse::CopyFrom(const ScheduleExpensiveOperationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.ScheduleExpensiveOperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScheduleExpensiveOperationResponse::IsInitialized() const {

  return true;
}

void ScheduleExpensiveOperationResponse::Swap(ScheduleExpensiveOperationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScheduleExpensiveOperationResponse::InternalSwap(ScheduleExpensiveOperationResponse* other) {
  std::swap(ok_to_proceed_, other->ok_to_proceed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScheduleExpensiveOperationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScheduleExpensiveOperationResponse_descriptor_;
  metadata.reflection = ScheduleExpensiveOperationResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScheduleExpensiveOperationResponse

// optional bool ok_to_proceed = 1;
void ScheduleExpensiveOperationResponse::clear_ok_to_proceed() {
  ok_to_proceed_ = false;
}
 bool ScheduleExpensiveOperationResponse::ok_to_proceed() const {
  // @@protoc_insertion_point(field_get:net_instaweb.ScheduleExpensiveOperationResponse.ok_to_proceed)
  return ok_to_proceed_;
}
 void ScheduleExpensiveOperationResponse::set_ok_to_proceed(bool value) {
  
  ok_to_proceed_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.ScheduleExpensiveOperationResponse.ok_to_proceed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
