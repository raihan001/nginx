// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pagespeed/kernel/sharedmem/shared_mem_cache_snapshot.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pagespeed/kernel/sharedmem/shared_mem_cache_snapshot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

void protobuf_ShutdownFile_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto() {
  delete SharedMemCacheDumpEntry::default_instance_;
  delete SharedMemCacheDump::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  SharedMemCacheDumpEntry::default_instance_ = new SharedMemCacheDumpEntry();
  SharedMemCacheDump::default_instance_ = new SharedMemCacheDump();
  SharedMemCacheDumpEntry::default_instance_->InitAsDefaultInstance();
  SharedMemCacheDump::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto_once_);
void protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto_once_,
                 &protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto {
  StaticDescriptorInitializer_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto() {
    protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto();
  }
} static_descriptor_initializer_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto_;
#endif

// ===================================================================

static ::std::string* MutableUnknownFieldsForSharedMemCacheDumpEntry(
    SharedMemCacheDumpEntry* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharedMemCacheDumpEntry::kRawKeyFieldNumber;
const int SharedMemCacheDumpEntry::kValueFieldNumber;
const int SharedMemCacheDumpEntry::kLastUseTimestampMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharedMemCacheDumpEntry::SharedMemCacheDumpEntry()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.SharedMemCacheDumpEntry)
}

void SharedMemCacheDumpEntry::InitAsDefaultInstance() {
}

SharedMemCacheDumpEntry::SharedMemCacheDumpEntry(const SharedMemCacheDumpEntry& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.SharedMemCacheDumpEntry)
}

void SharedMemCacheDumpEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_use_timestamp_ms_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SharedMemCacheDumpEntry::~SharedMemCacheDumpEntry() {
  // @@protoc_insertion_point(destructor:net_instaweb.SharedMemCacheDumpEntry)
  SharedDtor();
}

void SharedMemCacheDumpEntry::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SharedMemCacheDumpEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SharedMemCacheDumpEntry& SharedMemCacheDumpEntry::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto();
#endif
  return *default_instance_;
}

SharedMemCacheDumpEntry* SharedMemCacheDumpEntry::default_instance_ = NULL;

SharedMemCacheDumpEntry* SharedMemCacheDumpEntry::New(::google::protobuf::Arena* arena) const {
  SharedMemCacheDumpEntry* n = new SharedMemCacheDumpEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharedMemCacheDumpEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.SharedMemCacheDumpEntry)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_raw_key()) {
      raw_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    last_use_timestamp_ms_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SharedMemCacheDumpEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForSharedMemCacheDumpEntry, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:net_instaweb.SharedMemCacheDumpEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes raw_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_last_use_timestamp_ms;
        break;
      }

      // required sfixed64 last_use_timestamp_ms = 3;
      case 3: {
        if (tag == 25) {
         parse_last_use_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &last_use_timestamp_ms_)));
          set_has_last_use_timestamp_ms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.SharedMemCacheDumpEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.SharedMemCacheDumpEntry)
  return false;
#undef DO_
}

void SharedMemCacheDumpEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.SharedMemCacheDumpEntry)
  // required bytes raw_key = 1;
  if (has_raw_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->raw_key(), output);
  }

  // required bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // required sfixed64 last_use_timestamp_ms = 3;
  if (has_last_use_timestamp_ms()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->last_use_timestamp_ms(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:net_instaweb.SharedMemCacheDumpEntry)
}

int SharedMemCacheDumpEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:net_instaweb.SharedMemCacheDumpEntry)
  int total_size = 0;

  if (has_raw_key()) {
    // required bytes raw_key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_key());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_last_use_timestamp_ms()) {
    // required sfixed64 last_use_timestamp_ms = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
int SharedMemCacheDumpEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.SharedMemCacheDumpEntry)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes raw_key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_key());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required sfixed64 last_use_timestamp_ms = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharedMemCacheDumpEntry::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SharedMemCacheDumpEntry*>(&from));
}

void SharedMemCacheDumpEntry::MergeFrom(const SharedMemCacheDumpEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.SharedMemCacheDumpEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_raw_key()) {
      set_has_raw_key();
      raw_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_last_use_timestamp_ms()) {
      set_last_use_timestamp_ms(from.last_use_timestamp_ms());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void SharedMemCacheDumpEntry::CopyFrom(const SharedMemCacheDumpEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.SharedMemCacheDumpEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedMemCacheDumpEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SharedMemCacheDumpEntry::Swap(SharedMemCacheDumpEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharedMemCacheDumpEntry::InternalSwap(SharedMemCacheDumpEntry* other) {
  raw_key_.Swap(&other->raw_key_);
  value_.Swap(&other->value_);
  std::swap(last_use_timestamp_ms_, other->last_use_timestamp_ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SharedMemCacheDumpEntry::GetTypeName() const {
  return "net_instaweb.SharedMemCacheDumpEntry";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharedMemCacheDumpEntry

// required bytes raw_key = 1;
bool SharedMemCacheDumpEntry::has_raw_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SharedMemCacheDumpEntry::set_has_raw_key() {
  _has_bits_[0] |= 0x00000001u;
}
void SharedMemCacheDumpEntry::clear_has_raw_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void SharedMemCacheDumpEntry::clear_raw_key() {
  raw_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_key();
}
 const ::std::string& SharedMemCacheDumpEntry::raw_key() const {
  // @@protoc_insertion_point(field_get:net_instaweb.SharedMemCacheDumpEntry.raw_key)
  return raw_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SharedMemCacheDumpEntry::set_raw_key(const ::std::string& value) {
  set_has_raw_key();
  raw_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.SharedMemCacheDumpEntry.raw_key)
}
 void SharedMemCacheDumpEntry::set_raw_key(const char* value) {
  set_has_raw_key();
  raw_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.SharedMemCacheDumpEntry.raw_key)
}
 void SharedMemCacheDumpEntry::set_raw_key(const void* value, size_t size) {
  set_has_raw_key();
  raw_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.SharedMemCacheDumpEntry.raw_key)
}
 ::std::string* SharedMemCacheDumpEntry::mutable_raw_key() {
  set_has_raw_key();
  // @@protoc_insertion_point(field_mutable:net_instaweb.SharedMemCacheDumpEntry.raw_key)
  return raw_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SharedMemCacheDumpEntry::release_raw_key() {
  // @@protoc_insertion_point(field_release:net_instaweb.SharedMemCacheDumpEntry.raw_key)
  clear_has_raw_key();
  return raw_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SharedMemCacheDumpEntry::set_allocated_raw_key(::std::string* raw_key) {
  if (raw_key != NULL) {
    set_has_raw_key();
  } else {
    clear_has_raw_key();
  }
  raw_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_key);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.SharedMemCacheDumpEntry.raw_key)
}

// required bytes value = 2;
bool SharedMemCacheDumpEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SharedMemCacheDumpEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void SharedMemCacheDumpEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void SharedMemCacheDumpEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& SharedMemCacheDumpEntry::value() const {
  // @@protoc_insertion_point(field_get:net_instaweb.SharedMemCacheDumpEntry.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SharedMemCacheDumpEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:net_instaweb.SharedMemCacheDumpEntry.value)
}
 void SharedMemCacheDumpEntry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:net_instaweb.SharedMemCacheDumpEntry.value)
}
 void SharedMemCacheDumpEntry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:net_instaweb.SharedMemCacheDumpEntry.value)
}
 ::std::string* SharedMemCacheDumpEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:net_instaweb.SharedMemCacheDumpEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SharedMemCacheDumpEntry::release_value() {
  // @@protoc_insertion_point(field_release:net_instaweb.SharedMemCacheDumpEntry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SharedMemCacheDumpEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:net_instaweb.SharedMemCacheDumpEntry.value)
}

// required sfixed64 last_use_timestamp_ms = 3;
bool SharedMemCacheDumpEntry::has_last_use_timestamp_ms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SharedMemCacheDumpEntry::set_has_last_use_timestamp_ms() {
  _has_bits_[0] |= 0x00000004u;
}
void SharedMemCacheDumpEntry::clear_has_last_use_timestamp_ms() {
  _has_bits_[0] &= ~0x00000004u;
}
void SharedMemCacheDumpEntry::clear_last_use_timestamp_ms() {
  last_use_timestamp_ms_ = GOOGLE_LONGLONG(0);
  clear_has_last_use_timestamp_ms();
}
 ::google::protobuf::int64 SharedMemCacheDumpEntry::last_use_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:net_instaweb.SharedMemCacheDumpEntry.last_use_timestamp_ms)
  return last_use_timestamp_ms_;
}
 void SharedMemCacheDumpEntry::set_last_use_timestamp_ms(::google::protobuf::int64 value) {
  set_has_last_use_timestamp_ms();
  last_use_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:net_instaweb.SharedMemCacheDumpEntry.last_use_timestamp_ms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForSharedMemCacheDump(
    SharedMemCacheDump* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharedMemCacheDump::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharedMemCacheDump::SharedMemCacheDump()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:net_instaweb.SharedMemCacheDump)
}

void SharedMemCacheDump::InitAsDefaultInstance() {
}

SharedMemCacheDump::SharedMemCacheDump(const SharedMemCacheDump& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:net_instaweb.SharedMemCacheDump)
}

void SharedMemCacheDump::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SharedMemCacheDump::~SharedMemCacheDump() {
  // @@protoc_insertion_point(destructor:net_instaweb.SharedMemCacheDump)
  SharedDtor();
}

void SharedMemCacheDump::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SharedMemCacheDump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SharedMemCacheDump& SharedMemCacheDump::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_pagespeed_2fkernel_2fsharedmem_2fshared_5fmem_5fcache_5fsnapshot_2eproto();
#endif
  return *default_instance_;
}

SharedMemCacheDump* SharedMemCacheDump::default_instance_ = NULL;

SharedMemCacheDump* SharedMemCacheDump::New(::google::protobuf::Arena* arena) const {
  SharedMemCacheDump* n = new SharedMemCacheDump;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharedMemCacheDump::Clear() {
// @@protoc_insertion_point(message_clear_start:net_instaweb.SharedMemCacheDump)
  entry_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SharedMemCacheDump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::internal::NewPermanentCallback(
          &MutableUnknownFieldsForSharedMemCacheDump, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:net_instaweb.SharedMemCacheDump)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .net_instaweb.SharedMemCacheDumpEntry entry = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entry;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:net_instaweb.SharedMemCacheDump)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:net_instaweb.SharedMemCacheDump)
  return false;
#undef DO_
}

void SharedMemCacheDump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:net_instaweb.SharedMemCacheDump)
  // repeated .net_instaweb.SharedMemCacheDumpEntry entry = 1;
  for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->entry(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:net_instaweb.SharedMemCacheDump)
}

int SharedMemCacheDump::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:net_instaweb.SharedMemCacheDump)
  int total_size = 0;

  // repeated .net_instaweb.SharedMemCacheDumpEntry entry = 1;
  total_size += 1 * this->entry_size();
  for (int i = 0; i < this->entry_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entry(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharedMemCacheDump::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SharedMemCacheDump*>(&from));
}

void SharedMemCacheDump::MergeFrom(const SharedMemCacheDump& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:net_instaweb.SharedMemCacheDump)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  entry_.MergeFrom(from.entry_);
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void SharedMemCacheDump::CopyFrom(const SharedMemCacheDump& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:net_instaweb.SharedMemCacheDump)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedMemCacheDump::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->entry())) return false;
  return true;
}

void SharedMemCacheDump::Swap(SharedMemCacheDump* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharedMemCacheDump::InternalSwap(SharedMemCacheDump* other) {
  entry_.UnsafeArenaSwap(&other->entry_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SharedMemCacheDump::GetTypeName() const {
  return "net_instaweb.SharedMemCacheDump";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharedMemCacheDump

// repeated .net_instaweb.SharedMemCacheDumpEntry entry = 1;
int SharedMemCacheDump::entry_size() const {
  return entry_.size();
}
void SharedMemCacheDump::clear_entry() {
  entry_.Clear();
}
const ::net_instaweb::SharedMemCacheDumpEntry& SharedMemCacheDump::entry(int index) const {
  // @@protoc_insertion_point(field_get:net_instaweb.SharedMemCacheDump.entry)
  return entry_.Get(index);
}
::net_instaweb::SharedMemCacheDumpEntry* SharedMemCacheDump::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:net_instaweb.SharedMemCacheDump.entry)
  return entry_.Mutable(index);
}
::net_instaweb::SharedMemCacheDumpEntry* SharedMemCacheDump::add_entry() {
  // @@protoc_insertion_point(field_add:net_instaweb.SharedMemCacheDump.entry)
  return entry_.Add();
}
::google::protobuf::RepeatedPtrField< ::net_instaweb::SharedMemCacheDumpEntry >*
SharedMemCacheDump::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:net_instaweb.SharedMemCacheDump.entry)
  return &entry_;
}
const ::google::protobuf::RepeatedPtrField< ::net_instaweb::SharedMemCacheDumpEntry >&
SharedMemCacheDump::entry() const {
  // @@protoc_insertion_point(field_list:net_instaweb.SharedMemCacheDump.entry)
  return entry_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)
